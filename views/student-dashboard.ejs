<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard - SkillOns</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        /* Enhanced Professional Styles */
        :root {
            --primary-color: #4F46E5;
            --primary-dark: #4338CA;
            --secondary-color: #7C3AED;
            --success-color: #10B981;
            --warning-color: #F59E0B;
            --danger-color: #EF4444;
            --dark-color: #1F2937;
            --light-color: #F9FAFB;
            --border-radius: 12px;
            --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 25px rgba(0,0,0,0.1);
            --shadow-xl: 0 20px 40px rgba(0,0,0,0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: var(--dark-color);
        }

        /* Enhanced Navbar */
        .navbar {
            background: rgba(255, 255, 255, 0.98);
            backdrop-filter: blur(10px);
            box-shadow: var(--shadow-md);
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            height: 70px;
        }

        .nav-logo a {
            font-size: 24px;
            font-weight: 700;
            color: var(--primary-color);
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .nav-logo a::before {
            content: "ðŸŽ“";
            font-size: 28px;
        }

        /* Hamburger Menu */
        .hamburger {
            display: none;
            flex-direction: column;
            cursor: pointer;
            padding: 5px;
            z-index: 1001;
        }

        .hamburger span {
            width: 25px;
            height: 3px;
            background: var(--primary-color);
            margin: 3px 0;
            transition: all 0.3s ease;
            border-radius: 3px;
        }

        .hamburger.active span:nth-child(1) {
            transform: rotate(45deg) translate(6px, 6px);
        }

        .hamburger.active span:nth-child(2) {
            opacity: 0;
        }

        .hamburger.active span:nth-child(3) {
            transform: rotate(-45deg) translate(7px, -7px);
        }

        .nav-menu {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .nav-link {
            padding: 10px 20px;
            color: var(--dark-color);
            text-decoration: none;
            border-radius: var(--border-radius);
            transition: all 0.3s ease;
            font-weight: 500;
            white-space: nowrap;
        }

        .nav-link:hover {
            background: var(--light-color);
            color: var(--primary-color);
            transform: translateY(-2px);
        }

        .nav-link.logout-btn {
            background: var(--danger-color);
            color: white;
        }

        .nav-link.logout-btn:hover {
            background: #DC2626;
            transform: translateY(-2px);
        }

        /* Mobile Menu Overlay */
        .mobile-menu-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        .mobile-menu-overlay.active {
            display: block;
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .hamburger {
                display: flex;
            }

            .nav-menu {
                position: fixed;
                top: 70px;
                right: -100%;
                width: 280px;
                height: calc(100vh - 70px);
                background: white;
                flex-direction: column;
                padding: 30px 20px;
                gap: 15px;
                transition: all 0.3s ease;
                box-shadow: -5px 0 15px rgba(0,0,0,0.1);
                overflow-y: auto;
                align-items: stretch;
            }

            .nav-menu.active {
                right: 0;
            }

            .nav-link {
                display: block;
                padding: 15px 20px;
                border-radius: var(--border-radius);
                text-align: left;
            }

            .nav-link:hover {
                background: var(--light-color);
            }
        }

        /* Main Content */
        .main-content {
            margin-top: 70px;
            padding: 20px;
            min-height: calc(100vh - 70px);
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            animation: fadeInUp 0.6s ease;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Enhanced Dashboard Header */
        .dashboard-header {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: var(--shadow-lg);
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .user-avatar, .user-avatar-placeholder {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 32px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            box-shadow: var(--shadow-md);
        }

        .user-avatar {
            object-fit: cover;
        }

        .user-details h1 {
            font-size: 28px;
            color: var(--dark-color);
            margin-bottom: 5px;
        }

        .user-details p {
            color: #6B7280;
            margin-bottom: 10px;
        }

        .role-badge {
            display: inline-block;
            padding: 6px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        /* Enhanced Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 25px;
            display: flex;
            align-items: center;
            gap: 20px;
            box-shadow: var(--shadow-md);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }

        .stat-card:nth-child(1) .stat-icon {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .stat-card:nth-child(2) .stat-icon {
            background: linear-gradient(135deg, #10B981, #059669);
            color: white;
        }

        .stat-card:nth-child(3) .stat-icon {
            background: linear-gradient(135deg, #F59E0B, #D97706);
            color: white;
        }

        .stat-info h3 {
            font-size: 14px;
            color: #6B7280;
            margin-bottom: 5px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stat-number {
            font-size: 32px;
            font-weight: 700;
            color: var(--dark-color);
        }

        /* Enhanced Action Cards */
        .action-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .action-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            text-align: center;
            box-shadow: var(--shadow-md);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .action-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

        .action-card h3 {
            font-size: 20px;
            margin-bottom: 10px;
            color: var(--dark-color);
        }

        .action-card p {
            color: #6B7280;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        /* Podcasts Section */
        .podcasts-section {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: var(--shadow-md);
        }

        .section-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .section-header h2 {
            font-size: 28px;
            color: var(--dark-color);
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .section-header p {
            color: #6B7280;
            font-size: 16px;
        }

        .podcast-filters {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .filter-group label {
            font-weight: 600;
            color: var(--dark-color);
            font-size: 14px;
        }

        .filter-group select {
            padding: 10px 15px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
            background: white;
            color: var(--dark-color);
            transition: all 0.3s ease;
        }

        .filter-group select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .podcasts-container {
            min-height: 200px;
        }

        .loading-state {
            text-align: center;
            padding: 40px;
            color: #6B7280;
        }

        .loading-state i {
            font-size: 32px;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .podcast-card {
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            transition: all 0.3s ease;
            box-shadow: var(--shadow-sm);
        }

        .podcast-card:hover {
            box-shadow: var(--shadow-md);
            transform: translateY(-2px);
        }

        .podcast-info {
            flex: 1;
            margin-right: 20px;
        }

        .podcast-info h4 {
            color: var(--primary-color);
            margin-bottom: 10px;
            font-size: 18px;
        }

        .podcast-description {
            color: #6b7280;
            margin-bottom: 15px;
            line-height: 1.5;
        }

        .podcast-meta {
            margin-bottom: 15px;
        }

        .podcast-meta .badge {
            margin-right: 8px;
            margin-bottom: 5px;
        }

        .podcast-stats {
            display: flex;
            gap: 20px;
        }

        .podcast-stats small {
            color: #9ca3af;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .podcast-actions {
            display: flex;
            flex-direction: column;
            gap: 10px;
            min-width: 120px;
        }

        .podcast-actions .btn {
            width: 100%;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #6B7280;
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 15px;
            color: #9CA3AF;
        }

        .empty-state h4 {
            font-size: 20px;
            margin-bottom: 10px;
            color: var(--dark-color);
        }

        .empty-state p {
            margin-bottom: 20px;
        }

        /* Podcast Player Modal */
        .podcast-player-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .podcast-player-content {
            background: white;
            border-radius: 12px;
            width: 90%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
        }

        .podcast-player-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 25px;
            border-bottom: 1px solid #e5e7eb;
        }

        .podcast-player-header h3 {
            margin: 0;
            color: var(--primary-color);
            font-size: 20px;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #6b7280;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.2s ease;
        }

        .close-btn:hover {
            background: #f3f4f6;
            color: #374151;
        }

        .podcast-player-body {
            padding: 25px;
        }

        .podcast-player-body .podcast-description {
            margin-bottom: 20px;
            color: #6b7280;
            line-height: 1.6;
        }

        .podcast-player-body .podcast-meta {
            margin-bottom: 20px;
        }

        .audio-player-container {
            margin: 25px 0;
            text-align: center;
        }

        .audio-player-container audio {
            width: 100%;
            max-width: 400px;
        }

        .podcast-player-body .podcast-stats {
            display: flex;
            gap: 20px;
            justify-content: center;
            margin-top: 20px;
        }

        /* Badge Styles */
        .badge {
            display: inline-block;
            padding: 4px 8px;
            font-size: 12px;
            font-weight: 600;
            border-radius: 6px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .badge-primary {
            background: var(--primary-color);
            color: white;
        }

        .badge-secondary {
            background: var(--secondary-color);
            color: white;
        }

        .badge-info {
            background: #06b6d4;
            color: white;
        }

        /* Enhanced Buttons */
        .btn {
            padding: 12px 24px;
            border-radius: var(--border-radius);
            font-weight: 600;
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 16px;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(79, 70, 229, 0.3);
        }

        .btn-secondary {
            background: var(--light-color);
            color: var(--dark-color);
            border: 2px solid #E5E7EB;
        }

        .btn-secondary:hover {
            background: white;
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        /* Recent Activity Styles */
        .recent-activity {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            box-shadow: var(--shadow-md);
            margin-bottom: 30px;
        }

        .recent-activity h3 {
            font-size: 22px;
            color: var(--dark-color);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .quiz-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .quiz-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 20px;
            background: var(--light-color);
            border-radius: var(--border-radius);
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .quiz-item:hover {
            transform: translateX(5px);
            border-color: var(--primary-color);
            box-shadow: var(--shadow-md);
        }

        .quiz-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
            flex-shrink: 0;
        }

        .quiz-content {
            flex: 1;
            min-width: 0;
        }

        .quiz-content h4 {
            font-size: 18px;
            color: var(--dark-color);
            margin-bottom: 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .quiz-content p {
            color: #6B7280;
            font-size: 14px;
            margin-bottom: 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .quiz-meta {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            font-size: 13px;
            color: #9CA3AF;
        }

        .quiz-meta span {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .quiz-actions {
            flex-shrink: 0;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #6B7280;
        }

        .empty-state i {
            font-size: 64px;
            color: #D1D5DB;
            margin-bottom: 20px;
        }

        .empty-state p {
            font-size: 18px;
            margin-bottom: 20px;
        }

        /* Organization Info Styles */
        .organization-info {
            background: linear-gradient(135deg, rgba(79, 70, 229, 0.1), rgba(124, 58, 237, 0.1));
            border-radius: var(--border-radius);
            padding: 20px;
            margin-bottom: 30px;
            border-left: 4px solid var(--primary-color);
        }

        .organization-info h3 {
            color: var(--dark-color);
            margin-bottom: 15px;
            font-size: 20px;
        }

        .org-badges {
            margin-bottom: 10px;
        }

        .badge {
            display: inline-block;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
            background: var(--primary-color);
            color: white;
            margin-right: 8px;
            margin-bottom: 8px;
        }

        /* Alert Styles */
        .alert {
            padding: 20px;
            border-radius: var(--border-radius);
            margin-bottom: 30px;
            border-left: 4px solid;
        }

        .alert-warning {
            background: #FEF3C7;
            border-color: var(--warning-color);
            color: #92400E;
        }

        .alert h5 {
            margin-bottom: 10px;
            font-size: 18px;
        }

        /* Footer Styles */
        .footer {
            background: white;
            padding: 20px 0;
            margin-top: 60px;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.05);
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            text-align: center;
            color: #6B7280;
        }

        /* Responsive Grid */
        @media (max-width: 768px) {
            .main-content {
                padding: 15px;
            }

            .dashboard-header {
                padding: 20px;
            }

            .user-details h1 {
                font-size: 22px;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .action-cards {
                grid-template-columns: 1fr;
            }

            .stat-number {
                font-size: 28px;
            }

            .quiz-item {
                flex-direction: column;
                text-align: center;
            }

            .quiz-content h4 {
                white-space: normal;
            }

            .quiz-meta {
                justify-content: center;
            }

            .quiz-actions {
                width: 100%;
            }

            .quiz-actions .btn {
                width: 100%;
            }
        }

        @media (max-width: 480px) {
            .nav-logo a {
                font-size: 18px;
            }

            .nav-logo a::before {
                font-size: 22px;
            }

            .user-avatar, .user-avatar-placeholder {
                width: 60px;
                height: 60px;
                font-size: 24px;
            }

            .user-details h1 {
                font-size: 20px;
            }

            .btn {
                padding: 10px 20px;
                font-size: 14px;
            }

            .recent-activity {
                padding: 20px;
            }

            .quiz-item {
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="/">SkillOns</a>
            </div>
            <div class="hamburger" onclick="toggleMobileMenu()">
                <span></span>
                <span></span>
                <span></span>
            </div>
            <div class="nav-menu" id="navMenu">
                <a href="/student/dashboard" class="nav-link">
                    <i class="fas fa-home"></i> Dashboard
                </a>
                <a href="/available-quizzes" class="nav-link">
                    <i class="fas fa-book"></i> Browse Quizzes
                </a>
                <a href="/student/study-material" class="nav-link">
                    <i class="fas fa-graduation-cap"></i> Study Material
                </a>
                <a href="/my-results" class="nav-link">
                    <i class="fas fa-chart-bar"></i> My Results
                </a>
                <a href="#" class="nav-link" onclick="openStudentProfile()">
                    <i class="fas fa-user-edit"></i> Profile
                </a>
                <a href="/select-role" class="nav-link">
                    <i class="fas fa-exchange-alt"></i> Change Role
                </a>
                <a href="/logout" class="nav-link logout-btn">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        </div>
    </nav>
    <div class="mobile-menu-overlay" onclick="toggleMobileMenu()"></div>

    <main class="main-content">
        <div class="dashboard-container">
            <div class="dashboard-header">
                <div class="user-info">
                    <% if (user.photos && user.photos.length > 0) { %>
                        <img src="<%= user.photos[0].value %>" alt="Profile" class="user-avatar">
                    <% } else { %>
                        <div class="user-avatar-placeholder">
                            <i class="fas fa-user-graduate"></i>
                        </div>
                    <% } %>
                    <div class="user-details">
                        <h1>Welcome, <%= user.displayName %>!</h1>
                        <p><%= user.email %></p>
                        <span class="role-badge student-badge">Student</span>
                    </div>
                </div>
            </div>

            <div class="dashboard-content">
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-file-alt"></i>
                        </div>
                        <div class="stat-info">
                            <h3>Available Quizzes</h3>
                            <p class="stat-number"><%= quizzes.length %></p>
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-info">
                            <h3>Completed</h3>
                            <p class="stat-number"><%= completedCount %></p>
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="stat-info">
                            <h3>Average Score</h3>
                            <p class="stat-number"><%= averageScore > 0 ? averageScore + '%' : '--' %></p>
                        </div>
                    </div>
                </div>

                <div class="action-cards">
                    <div class="action-card">
                        <div style="font-size: 48px; margin-bottom: 15px; color: var(--primary-color);">
                            <i class="fas fa-book-open"></i>
                        </div>
                        <h3>Take a Quiz</h3>
                        <p>Browse and take available quizzes to test your knowledge</p>
                        <a href="/available-quizzes" class="btn btn-primary">
                            <i class="fas fa-arrow-right"></i> Browse Quizzes
                        </a>
                    </div>

                    <div class="action-card">
                        <div style="font-size: 48px; margin-bottom: 15px; background: linear-gradient(135deg, #667eea, #764ba2); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">
                            <i class="fas fa-trophy"></i>
                        </div>
                        <h3>Competitive Quiz</h3>
                        <p>Join live competitive sessions and compete with classmates</p>
                        <a href="/join-competitive" class="btn btn-primary">
                            <i class="fas fa-bolt"></i> Join Session
                        </a>
                    </div>

                    <div class="action-card">
                        <div style="font-size: 48px; margin-bottom: 15px; color: var(--success-color);">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h3>My Results</h3>
                        <p>Track your progress and review past quiz performances</p>
                        <a href="/my-results" class="btn btn-secondary">
                            <i class="fas fa-chart-bar"></i> View Results
                        </a>
                    </div>

                    <div class="action-card">
                        <div style="font-size: 48px; margin-bottom: 15px; color: var(--warning-color);">
                            <i class="fas fa-graduation-cap"></i>
                        </div>
                        <h3>Study Material</h3>
                        <p>Access educational resources shared by your teachers</p>
                        <a href="/student/study-material" class="btn btn-secondary">
                            <i class="fas fa-folder-open"></i> View Material
                        </a>
                    </div>

                    <div class="action-card">
                        <div style="font-size: 48px; margin-bottom: 15px; color: var(--secondary-color);">
                            <i class="fas fa-podcast"></i>
                        </div>
                        <h3>Educational Podcasts</h3>
                        <p>Listen to audio lessons and educational content from your teachers</p>
                        <button onclick="showPodcastsSection()" class="btn btn-primary">
                            <i class="fas fa-headphones"></i> Browse Podcasts
                        </button>
                    </div>
                </div>

                <!-- Podcasts Section -->
                <div id="podcastsSection" class="podcasts-section" style="display: none;">
                    <div class="section-header">
                        <h2><i class="fas fa-podcast"></i> Educational Podcasts</h2>
                        <p>Listen to audio lessons created by your teachers</p>
                    </div>
                    
                    <div class="podcast-filters">
                        <div class="filter-group">
                            <label for="gradeFilter">Grade Level:</label>
                            <select id="gradeFilter" onchange="filterPodcasts()">
                                <option value="all">All Grades</option>
                                <option value="1st grade">1st Grade</option>
                                <option value="2nd grade">2nd Grade</option>
                                <option value="3rd grade">3rd Grade</option>
                                <option value="4th grade">4th Grade</option>
                                <option value="5th grade">5th Grade</option>
                                <option value="6th grade">6th Grade</option>
                                <option value="7th grade">7th Grade</option>
                                <option value="8th grade">8th Grade</option>
                                <option value="9th grade">9th Grade</option>
                                <option value="10th grade">10th Grade</option>
                                <option value="11th grade">11th Grade</option>
                                <option value="12th grade">12th Grade</option>
                            </select>
                        </div>
                        
                        <div class="filter-group">
                            <label for="subjectFilter">Subject:</label>
                            <select id="subjectFilter" onchange="filterPodcasts()">
                                <option value="all">All Subjects</option>
                                <option value="English">English</option>
                                <option value="Science">Science</option>
                                <option value="Math">Math</option>
                                <option value="History">History</option>
                                <option value="Geography">Geography</option>
                                <option value="Literature">Literature</option>
                                <option value="Art">Art</option>
                                <option value="Music">Music</option>
                                <option value="Physical Education">Physical Education</option>
                                <option value="Computer Science">Computer Science</option>
                            </select>
                        </div>
                    </div>
                    
                    <div id="podcastsContainer" class="podcasts-container">
                        <div class="loading-state">
                            <i class="fas fa-spinner fa-spin"></i>
                            <p>Loading podcasts...</p>
                        </div>
                    </div>
                </div>

                <% if (typeof needsMigration !== 'undefined' && needsMigration) { %>
                <div class="alert alert-warning">
                    <h5><i class="fas fa-exclamation-triangle me-2"></i>Account Migration Available</h5>
                    <p>We found multiple accounts for your email. You can merge them to see content from all your organizations in one place.</p>
                    <button class="btn btn-primary" onclick="migrateAccount()">
                        <i class="fas fa-sync me-1"></i>Merge My Accounts
                    </button>
                </div>
                <% } %>

                <% if (organizations && organizations.length > 1) { %>
                <div class="organization-info">
                    <h3><i class="fas fa-school me-2"></i>Your Organizations</h3>
                    <div class="org-badges">
                        <% organizations.forEach(org => { %>
                            <span class="badge bg-primary me-2 mb-2">
                                <i class="fas fa-building me-1"></i><%= org.name %>
                            </span>
                        <% }); %>
                    </div>
                    <p class="text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        You're enrolled in <%= organizations.length %> organization(s). Quizzes from all your organizations are shown below.
                    </p>
                </div>
                <% } %>

              <!--  <div class="recent-activity">
                    <h3>Available Quizzes
                        <% if (organizations && organizations.length > 1) { %>
                            <small class="text-muted">(from all your organizations)</small>
                        <% } %>
                    </h3>
                    <% if (quizzes.length > 0) { %>
                        <div class="quiz-list">
                            <% quizzes.forEach(quiz => { %>
                                <div class="quiz-item">
                                    <div class="quiz-icon">
                                        <i class="fas fa-file-alt"></i>
                                    </div>
                                    <div class="quiz-content">
                                        <h4><%= quiz.title %></h4>
                                        <p><%= quiz.description %></p>
                                        <div class="quiz-meta">
                                            <span class="quiz-teacher">
                                                <i class="fas fa-user me-1"></i>
                                                By: <%= quiz.createdBy ? quiz.createdBy.displayName : 'Teacher' %>
                                            </span>
                                            <% if (organizations && organizations.length > 1) { %>
                                            <span class="quiz-organization">
                                                <i class="fas fa-school me-1"></i>
                                                <%= quiz.organizationId ? quiz.organizationId.name : 'Organization' %>
                                            </span>
                                            <% } %>
                                            <span class="quiz-date">
                                                <i class="fas fa-calendar me-1"></i>
                                                <%= new Date(quiz.createdAt).toLocaleDateString() %>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="quiz-actions">
                                        <a href="/take-quiz/<%= quiz._id %>" class="btn btn-primary btn-sm">
                                            <i class="fas fa-play"></i> Take Quiz
                                        </a>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="empty-state">
                            <i class="fas fa-file-alt"></i>
                            <p>No quizzes available at the moment. Check back later!</p>
                        </div>
                    <% } %>
                </div> -->
            </div>
        </div>
    </main>

    <!-- Student Profile Modal -->
    <div id="studentProfileModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2><i class="fas fa-user-graduate me-2"></i>Student Profile</h2>
                <span class="close" onclick="closeStudentProfile()">&times;</span>
            </div>
            <div class="modal-body">
                <form id="studentProfileForm">
                    <div class="form-group">
                        <label for="gradeLevel">Grade Level:</label>
                        <select id="gradeLevel" name="gradeLevel" required>
                            <option value="">Select Grade Level</option>
                            <option value="1st grade">1st Grade</option>
                            <option value="2nd grade">2nd Grade</option>
                            <option value="3rd grade">3rd Grade</option>
                            <option value="4th grade">4th Grade</option>
                            <option value="5th grade">5th Grade</option>
                            <option value="6th grade">6th Grade</option>
                            <option value="7th grade">7th Grade</option>
                            <option value="8th grade">8th Grade</option>
                            <option value="9th grade">9th Grade</option>
                            <option value="10th grade">10th Grade</option>
                            <option value="11th grade">11th Grade</option>
                            <option value="12th grade">12th Grade</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Subjects:</label>
                        <div class="checkbox-group">
                            <div class="checkbox-item">
                                <input type="checkbox" id="subjectEnglish" name="subjects" value="English">
                                <label for="subjectEnglish">English</label>
                            </div>
                            <div class="checkbox-item">
                                <input type="checkbox" id="subjectScience" name="subjects" value="Science">
                                <label for="subjectScience">Science</label>
                            </div>
                            <div class="checkbox-item">
                                <input type="checkbox" id="subjectMath" name="subjects" value="Math">
                                <label for="subjectMath">Math</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Save Profile</button>
                        <button type="button" class="btn btn-secondary" onclick="closeStudentProfile()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <footer class="footer">
        <div class="footer-content">
            <p>&copy; 2025 SkillOns. All rights reserved.</p>
        </div>
    </footer>

    <script>
        // Hamburger Menu Toggle
        function toggleMobileMenu() {
            const hamburger = document.querySelector('.hamburger');
            const navMenu = document.getElementById('navMenu');
            const overlay = document.querySelector('.mobile-menu-overlay');

            hamburger.classList.toggle('active');
            navMenu.classList.toggle('active');
            overlay.classList.toggle('active');

            // Prevent body scroll when menu is open
            if (navMenu.classList.contains('active')) {
                document.body.style.overflow = 'hidden';
            } else {
                document.body.style.overflow = 'auto';
            }
        }

        // Close mobile menu when clicking on a link
        document.addEventListener('DOMContentLoaded', function() {
            const navLinks = document.querySelectorAll('.nav-menu .nav-link');
            navLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    if (window.innerWidth <= 768) {
                        // Don't close immediately for profile link
                        if (!this.getAttribute('onclick') || !this.getAttribute('onclick').includes('openStudentProfile')) {
                            toggleMobileMenu();
                        }
                    }
                });
            });

            // Close menu on window resize if open
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    const hamburger = document.querySelector('.hamburger');
                    const navMenu = document.getElementById('navMenu');
                    const overlay = document.querySelector('.mobile-menu-overlay');

                    hamburger.classList.remove('active');
                    navMenu.classList.remove('active');
                    overlay.classList.remove('active');
                    document.body.style.overflow = 'auto';
                }
            });
        });

        // Student Profile Modal Functions
        function openStudentProfile() {
            console.log('Opening student profile modal from dashboard');
            const modal = document.getElementById('studentProfileModal');
            modal.style.display = 'block';
            modal.classList.add('show');
            loadStudentProfile();
        }

        function closeStudentProfile() {
            const modal = document.getElementById('studentProfileModal');
            modal.style.display = 'none';
            modal.classList.remove('show');
        }

        function loadStudentProfile() {
            console.log('Loading student profile...');
            fetch('/student-profile')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch profile');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Profile data received:', data);

                    // Set grade level
                    const gradeSelect = document.getElementById('gradeLevel');
                    if (gradeSelect) {
                        gradeSelect.value = data.gradeLevel || '';
                        console.log('Set grade level to:', data.gradeLevel);
                    }

                    // Set subjects
                    const subjectCheckboxes = document.querySelectorAll('input[name="subjects"]');
                    subjectCheckboxes.forEach(checkbox => {
                        checkbox.checked = data.subjects.includes(checkbox.value);
                        console.log('Set subject', checkbox.value, 'to:', data.subjects.includes(checkbox.value));
                    });
                })
                .catch(error => {
                    console.error('Error loading student profile:', error);
                });
        }

        // Handle form submission
        document.getElementById('studentProfileForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const gradeLevel = document.getElementById('gradeLevel').value;
            const subjectCheckboxes = document.querySelectorAll('input[name="subjects"]:checked');
            const subjects = Array.from(subjectCheckboxes).map(cb => cb.value);

            console.log('Submitting profile update:', { gradeLevel, subjects });

            fetch('/update-student-profile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    gradeLevel: gradeLevel,
                    subjects: subjects
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to update profile');
                }
                return response.json();
            })
            .then(data => {
                console.log('Profile update response:', data);
                if (data.success) {
                    showNotification('Profile updated successfully!', 'success');
                    closeStudentProfile();
                    // Reload the page to reflect changes
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showNotification('Error updating profile: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error updating profile:', error);
                showNotification('Error updating profile', 'error');
            });
        });

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('studentProfileModal');
            if (event.target === modal) {
                closeStudentProfile();
            }
        }

        // Notification function
        function showNotification(message, type) {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                <span>${message}</span>
            `;

            // Add to page
            document.body.appendChild(notification);

            // Show notification
            setTimeout(() => {
                notification.classList.add('show');
            }, 100);

            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 3000);
        }
    </script>

    <!-- Session timeout management -->
    <script src="/js/session-timeout.js"></script>

    <script>
        // Global function to ensure modal is hidden
        function ensureProfileModalHidden() {
            const modal = document.getElementById('studentProfileModal');
            if (modal) {
                modal.style.display = 'none';
                modal.classList.remove('show');
                console.log('Profile modal forcibly hidden');
            }
        }

        // Ensure profile modal is hidden on page load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Student dashboard page loaded');
            console.log('User grade level:', '<%= user.gradeLevel || "Not Set" %>');
            console.log('User subjects:', '<%= (user.subjects || []).join(", ") || "Not Set" %>');

            // Explicitly ensure modal is hidden on page load
            ensureProfileModalHidden();

            // Add additional safety check after a short delay
            setTimeout(ensureProfileModalHidden, 100);
            setTimeout(ensureProfileModalHidden, 500);
        });

        function migrateAccount() {
            const button = event.target;
            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Migrating...';

            fetch('/api/migrate-multi-org-account', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`Success! Merged ${data.organizationCount} organization memberships. Please refresh the page to see content from all your organizations.`);
                    window.location.reload();
                } else {
                    alert('Migration failed: ' + data.message);
                    button.disabled = false;
                    button.innerHTML = '<i class="fas fa-sync me-1"></i>Merge My Accounts';
                }
            })
            .catch(error => {
                console.error('Migration error:', error);
                alert('An error occurred during migration. Please try again.');
                button.disabled = false;
                button.innerHTML = '<i class="fas fa-sync me-1"></i>Merge My Accounts';
            });
        }

        // Podcasts Functions
        function showPodcastsSection() {
            const podcastsSection = document.getElementById('podcastsSection');
            podcastsSection.style.display = 'block';
            loadStudentPodcasts();
        }

        async function loadStudentPodcasts() {
            try {
                const gradeFilter = document.getElementById('gradeFilter').value;
                const subjectFilter = document.getElementById('subjectFilter').value;
                
                let url = '/api/student-podcasts?';
                if (gradeFilter !== 'all') url += `grade=${gradeFilter}&`;
                if (subjectFilter !== 'all') url += `subject=${subjectFilter}`;
                
                console.log('Loading podcasts with URL:', url);
                
                const response = await fetch(url);
                if (response.ok) {
                    const data = await response.json();
                    displayStudentPodcasts(data.podcasts);
                } else {
                    console.error('Error loading podcasts:', response.status);
                    document.getElementById('podcastsContainer').innerHTML = 
                        '<div class="error-state"><p>Error loading podcasts</p></div>';
                }
            } catch (error) {
                console.error('Error loading podcasts:', error);
                document.getElementById('podcastsContainer').innerHTML = 
                    '<div class="error-state"><p>Error loading podcasts: ' + error.message + '</p></div>';
            }
        }

        function displayStudentPodcasts(podcasts) {
            const container = document.getElementById('podcastsContainer');
            
            if (!podcasts || podcasts.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-podcast fa-3x text-muted mb-3"></i>
                        <h4>No Podcasts Available</h4>
                        <p>No podcasts are available for your current filters.</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = podcasts.map(podcast => `
                <div class="podcast-card">
                    <div class="podcast-info">
                        <h4>${podcast.title}</h4>
                        <p class="podcast-description">${podcast.description}</p>
                        <div class="podcast-meta">
                            <span class="badge badge-primary">${podcast.gradeLevel}</span>
                            ${podcast.subjects.map(subject => `<span class="badge badge-secondary">${subject}</span>`).join('')}
                            <span class="badge badge-info">${podcast.duration ? formatDuration(podcast.duration) : 'Unknown duration'}</span>
                        </div>
                        <div class="podcast-stats">
                            <small><i class="fas fa-play"></i> ${podcast.playCount || 0} plays</small>
                            <small><i class="fas fa-calendar"></i> ${new Date(podcast.createdAt).toLocaleDateString()}</small>
                            <small><i class="fas fa-user"></i> ${podcast.createdByName}</small>
                        </div>
                    </div>
                    <div class="podcast-actions">
                        <button class="btn btn-primary" onclick="playStudentPodcast('${podcast._id}')">
                            <i class="fas fa-play"></i> Play
                        </button>
                    </div>
                </div>
            `).join('');
        }

        function formatDuration(seconds) {
            const minutes = Math.floor(seconds / 60);
            const remainingSeconds = seconds % 60;
            return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
        }

        function filterPodcasts() {
            loadStudentPodcasts();
        }

        async function playStudentPodcast(podcastId) {
            try {
                const response = await fetch(`/api/podcast/${podcastId}`);
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        showStudentPodcastPlayer(data.podcast);
                        // Update play count
                        fetch(`/api/podcast-play/${podcastId}`, { method: 'POST' });
                    }
                }
            } catch (error) {
                console.error('Error loading podcast:', error);
                alert('Error loading podcast');
            }
        }

        function showStudentPodcastPlayer(podcast) {
            const modal = document.createElement('div');
            modal.className = 'podcast-player-modal';
            modal.innerHTML = `
                <div class="podcast-player-content">
                    <div class="podcast-player-header">
                        <h3>${podcast.title}</h3>
                        <button class="close-btn" onclick="closeStudentPodcastPlayer()">&times;</button>
                    </div>
                    <div class="podcast-player-body">
                        <p class="podcast-description">${podcast.description}</p>
                        <div class="podcast-meta">
                            <span class="badge badge-primary">${podcast.gradeLevel}</span>
                            ${podcast.subjects.map(subject => `<span class="badge badge-secondary">${subject}</span>`).join('')}
                            <span class="badge badge-info">${podcast.duration ? formatDuration(podcast.duration) : 'Unknown duration'}</span>
                        </div>
                        <div class="audio-player-container">
                            <audio id="studentPodcastAudio" controls preload="metadata" crossorigin="anonymous">
                                <source src="${podcast.audioUrl}" type="audio/${podcast.audioFormat}">
                                <source src="${podcast.audioUrl}" type="audio/*">
                                Your browser does not support the audio element.
                            </audio>
                        </div>
                        <div class="podcast-stats">
                            <small><i class="fas fa-play"></i> ${podcast.playCount || 0} plays</small>
                            <small><i class="fas fa-calendar"></i> ${new Date(podcast.createdAt).toLocaleDateString()}</small>
                            <small><i class="fas fa-user"></i> ${podcast.createdByName}</small>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            // Add event listener for clicking outside modal to close
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    closeStudentPodcastPlayer();
                }
            });
        }

        function closeStudentPodcastPlayer() {
            const modal = document.querySelector('.podcast-player-modal');
            if (modal) {
                modal.remove();
            }
        }
    </script>
</body>
</html>
