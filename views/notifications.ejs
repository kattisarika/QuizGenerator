<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notifications - SkillOns</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .notifications-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        .notifications-header {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            text-align: center;
        }

        .header-content h1 {
            margin: 0 0 10px 0;
            font-size: 28px;
        }

        .header-content p {
            margin: 0;
            opacity: 0.9;
        }



        .notifications-stats {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 25px;
            margin-bottom: 30px;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }

        .stat-item {
            text-align: center;
            padding: 20px;
            border-radius: 8px;
            background: #f8f9fa;
        }

        .stat-number {
            font-size: 32px;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #6b7280;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .notifications-list {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .list-header {
            background: #f8f9fa;
            padding: 20px;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .list-header h2 {
            margin: 0;
            color: #374151;
            font-size: 20px;
        }

        .filter-buttons {
            display: flex;
            gap: 10px;
        }

        .filter-btn {
            padding: 6px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            background: white;
            color: #374151;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .filter-btn.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }

        .filter-btn:hover {
            background: #f3f4f6;
        }

        .filter-btn.active:hover {
            background: #5a67d8;
        }

        .notification-item {
            display: flex;
            align-items: flex-start;
            gap: 15px;
            padding: 20px;
            border-bottom: 1px solid #f3f4f6;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .notification-item:last-child {
            border-bottom: none;
        }

        .notification-item:hover {
            background: #f8f9fa;
        }

        .notification-item.unread {
            background: #f0f9ff;
            border-left: 4px solid #667eea;
        }

        .notification-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
            flex-shrink: 0;
        }

        .notification-content {
            flex: 1;
        }

        .notification-title {
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            font-size: 16px;
        }

        .notification-message {
            color: #6b7280;
            font-size: 14px;
            line-height: 1.5;
            margin-bottom: 10px;
        }

        .notification-meta {
            display: flex;
            align-items: center;
            gap: 15px;
            font-size: 12px;
            color: #9ca3af;
        }

        .notification-time {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .notification-type {
            display: flex;
            align-items: center;
            gap: 5px;
            padding: 2px 8px;
            background: #e5e7eb;
            border-radius: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .notification-actions {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .action-btn {
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            font-size: 12px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
        }

        .action-btn.primary {
            background: #667eea;
            color: white;
        }

        .action-btn.primary:hover {
            background: #5a67d8;
            color: white;
            text-decoration: none;
        }

        .action-btn.secondary {
            background: #e5e7eb;
            color: #374151;
        }

        .action-btn.secondary:hover {
            background: #d1d5db;
            color: #374151;
            text-decoration: none;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 30px;
        }

        .pagination-btn {
            padding: 8px 16px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            background: white;
            color: #374151;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .pagination-btn:hover {
            background: #f3f4f6;
            color: #374151;
            text-decoration: none;
        }

        .pagination-btn.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #6b7280;
        }

        .empty-state i {
            font-size: 64px;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        .empty-state h3 {
            margin-bottom: 10px;
            color: #374151;
        }

        .back-btn {
            background: #6b7280;
            color: white;
            border: none;
            border-radius: 8px;
            padding: 12px 24px;
            font-size: 14px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 20px;
            transition: background 0.3s ease;
        }

        .back-btn:hover {
            background: #4b5563;
            color: white;
            text-decoration: none;
        }

        @media (max-width: 768px) {
            .notifications-container {
                padding: 10px;
            }

            .notifications-header {
                padding: 20px;
            }

            .notifications-stats {
                grid-template-columns: 1fr;
                gap: 15px;
                padding: 20px;
            }

            .list-header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }

            .filter-buttons {
                flex-wrap: wrap;
            }

            .notification-item {
                padding: 15px;
            }

            .notification-icon {
                width: 40px;
                height: 40px;
                font-size: 16px;
            }

            .notification-meta {
                flex-direction: column;
                gap: 8px;
                align-items: flex-start;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="/">SkillOns</a>
            </div>
            <div class="nav-menu">
                <% if (user.role === 'student') { %>
                    <a href="/student/dashboard" class="nav-link">Dashboard</a>
                    <a href="/available-quizzes" class="nav-link">Available Quizzes</a>
                    <a href="/student/study-material" class="nav-link">Study Material</a>
                    <a href="/my-results" class="nav-link">My Results</a>
                <% } else if (user.role === 'teacher') { %>
                    <a href="/teacher/dashboard" class="nav-link">Dashboard</a>
                    <a href="/teacher/create-quiz" class="nav-link">Create Quiz</a>
                    <a href="/teacher/student-assignments" class="nav-link">Student Assignments</a>
                    <a href="/teacher/student-results" class="nav-link">Student Results</a>
                <% } %>
                <a href="/logout" class="nav-link logout-btn">Logout</a>
            </div>
        </div>
    </nav>

    <div class="notifications-container">
        <% if (user.role === 'student') { %>
            <a href="/student/dashboard" class="back-btn">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        <% } else { %>
            <a href="/teacher/dashboard" class="back-btn">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        <% } %>

        <div class="notifications-header">
            <div class="header-content">
                <h1><i class="fas fa-bell"></i> All Notifications</h1>
                <p>View all your notifications</p>
            </div>
        </div>

        <div class="notifications-stats">
            <div class="stat-item">
                <div class="stat-number"><%= totalNotifications %></div>
                <div class="stat-label">Total Notifications</div>
            </div>
            <div class="stat-item">
                <div class="stat-number"><%= unreadCount %></div>
                <div class="stat-label">Unread</div>
            </div>
            <div class="stat-item">
                <div class="stat-number"><%= totalNotifications - unreadCount %></div>
                <div class="stat-label">Read</div>
            </div>
        </div>

        <div class="notifications-list">
            <div class="list-header">
                <h2>Notifications</h2>
                <div class="filter-buttons">
                    <button class="filter-btn active" onclick="filterNotifications('all')">All</button>
                    <button class="filter-btn" onclick="filterNotifications('unread')">Unread</button>
                    <button class="filter-btn" onclick="filterNotifications('assignment')">Assignments</button>
                    <button class="filter-btn" onclick="filterNotifications('quiz')">Quizzes</button>
                </div>
            </div>

            <% if (notifications && notifications.length > 0) { %>
                <% notifications.forEach(notification => { %>
                    <div class="notification-item <%= !notification.isRead ? 'unread' : '' %>" 
                         data-type="<%= notification.type %>" 
                         data-read="<%= notification.isRead %>"
                         onclick="handleNotificationClick('<%= notification._id %>', '<%= notification.actionUrl || '' %>')">
                        
                        <div class="notification-icon" style="background-color: <%= notification.color || '#667eea' %>">
                            <i class="<%= notification.icon || 'fas fa-bell' %>"></i>
                        </div>
                        
                        <div class="notification-content">
                            <div class="notification-title"><%= notification.title %></div>
                            <div class="notification-message"><%= notification.message %></div>
                            
                            <div class="notification-meta">
                                <div class="notification-time">
                                    <i class="fas fa-clock"></i>
                                    <span><%= new Date(notification.createdAt).toLocaleDateString() %> at <%= new Date(notification.createdAt).toLocaleTimeString() %></span>
                                </div>
                                <div class="notification-type">
                                    <i class="fas fa-tag"></i>
                                    <%= notification.type.replace('_', ' ') %>
                                </div>
                            </div>

                            <% if (notification.actionUrl) { %>
                                <div class="notification-actions">
                                    <a href="<%= notification.actionUrl %>" class="action-btn primary" onclick="event.stopPropagation(); markAsRead('<%= notification._id %>')">
                                        <i class="fas fa-external-link-alt"></i>
                                        <%= notification.actionText || 'View' %>
                                    </a>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-bell-slash"></i>
                    <h3>No Notifications</h3>
                    <p>You don't have any notifications yet. When you do, they'll appear here.</p>
                </div>
            <% } %>
        </div>

        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="/notifications?page=<%= currentPage - 1 %>" class="pagination-btn">
                        <i class="fas fa-chevron-left"></i> Previous
                    </a>
                <% } %>

                <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                    <a href="/notifications?page=<%= i %>" class="pagination-btn <%= i === currentPage ? 'active' : '' %>">
                        <%= i %>
                    </a>
                <% } %>

                <% if (currentPage < totalPages) { %>
                    <a href="/notifications?page=<%= currentPage + 1 %>" class="pagination-btn">
                        Next <i class="fas fa-chevron-right"></i>
                    </a>
                <% } %>
            </div>
        <% } %>
    </div>

    <script>
        async function markAsRead(notificationId) {
            try {
                await fetch(`/api/notifications/${notificationId}/read`, {
                    method: 'POST'
                });
                location.reload();
            } catch (error) {
                console.error('Error marking notification as read:', error);
            }
        }



        function filterNotifications(filter) {
            const items = document.querySelectorAll('.notification-item');
            const buttons = document.querySelectorAll('.filter-btn');
            
            // Update active button
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            // Filter items
            items.forEach(item => {
                const type = item.dataset.type;
                const isRead = item.dataset.read === 'true';
                
                let show = true;
                
                if (filter === 'unread' && isRead) {
                    show = false;
                } else if (filter === 'assignment' && !type.includes('assignment')) {
                    show = false;
                } else if (filter === 'quiz' && !type.includes('quiz')) {
                    show = false;
                }
                
                item.style.display = show ? 'flex' : 'none';
            });
        }

        function handleNotificationClick(notificationId, actionUrl) {
            if (actionUrl) {
                markAsRead(notificationId);
                window.location.href = actionUrl;
            }
        }
    </script>
</body>
</html>
