<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Join Competitive Quiz</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .join-container {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
            max-width: 500px;
            width: 100%;
        }
        .join-header {
            text-align: center;
            margin-bottom: 30px;
        }
        .join-header i {
            font-size: 60px;
            color: #667eea;
            margin-bottom: 20px;
        }
        .code-input-container {
            position: relative;
            margin-bottom: 30px;
        }
        .code-input {
            width: 100%;
            padding: 20px;
            font-size: 28px;
            text-align: center;
            border: 3px solid #e0e0e0;
            border-radius: 15px;
            text-transform: uppercase;
            letter-spacing: 5px;
            transition: all 0.3s ease;
        }
        .code-input:focus {
            border-color: #667eea;
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        .join-btn {
            width: 100%;
            padding: 15px;
            font-size: 20px;
            font-weight: 600;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 10px;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .join-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }
        .join-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        .session-preview {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
            display: none;
        }
        .session-info {
            margin-bottom: 15px;
        }
        .session-info h4 {
            color: #667eea;
            margin-bottom: 10px;
        }
        .session-detail {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            color: #666;
        }
        .waiting-room {
            display: none;
            text-align: center;
            padding: 30px;
        }
        .participants-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 10px;
            margin-top: 20px;
        }
        .participant-card {
            background: #f0f4ff;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
            animation: fadeIn 0.5s ease;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .countdown-container {
            margin-top: 30px;
            padding: 20px;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            border-radius: 15px;
        }
        .countdown {
            font-size: 48px;
            font-weight: bold;
            color: #667eea;
        }
        .back-btn {
            position: absolute;
            top: 20px;
            left: 20px;
            background: white;
            border: 2px solid #667eea;
            color: #667eea;
            padding: 10px 20px;
            border-radius: 25px;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        .back-btn:hover {
            background: #667eea;
            color: white;
        }
    </style>
</head>
<body>
    <a href="/student/dashboard" class="back-btn">
        <i class="fas fa-arrow-left"></i> Back to Dashboard
    </a>

    <div class="join-container">
        <div id="joinForm">
            <div class="join-header">
                <i class="fas fa-trophy"></i>
                <h2>Join Competitive Quiz</h2>
                <p class="text-muted">Enter the session code provided by your teacher</p>
            </div>
            
            <div class="code-input-container">
                <input type="text" 
                       id="sessionCode" 
                       class="code-input" 
                       placeholder="ENTER CODE" 
                       maxlength="6"
                       autocomplete="off">
            </div>
            
            <button id="joinBtn" class="join-btn" onclick="joinSession()">
                <i class="fas fa-sign-in-alt"></i> Join Session
            </button>
            
            <div id="sessionPreview" class="session-preview">
                <!-- Session details will appear here -->
            </div>
        </div>
        
        <div id="waitingRoom" class="waiting-room">
            <h3><i class="fas fa-users"></i> Waiting Room</h3>
            <p>Waiting for the teacher to start the quiz...</p>
            
            <div class="session-info">
                <h4 id="quizTitle"></h4>
                <div class="session-detail">
                    <span>Participants:</span>
                    <span id="participantCount">0</span>
                </div>
            </div>
            
            <div class="countdown-container" style="display: none;">
                <p>Quiz starts in:</p>
                <div class="countdown" id="countdown"></div>
            </div>
            
            <div class="participants-grid" id="participantsList">
                <!-- Participants will be listed here -->
            </div>
        </div>
    </div>

    <script>
        let currentSessionId = null;
        let pollInterval = null;
        
        // Auto-focus on code input
        document.getElementById('sessionCode').focus();
        
        // Handle Enter key
        document.getElementById('sessionCode').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                joinSession();
            }
        });
        
        // Format input as user types
        document.getElementById('sessionCode').addEventListener('input', function(e) {
            this.value = this.value.toUpperCase();
        });
        
        async function joinSession() {
            const sessionCode = document.getElementById('sessionCode').value.trim();
            
            if (sessionCode.length !== 6) {
                alert('Please enter a valid 6-character session code');
                return;
            }
            
            document.getElementById('joinBtn').disabled = true;
            document.getElementById('joinBtn').innerHTML = '<i class="fas fa-spinner fa-spin"></i> Joining...';
            
            try {
                const response = await fetch(`/api/quiz-session/join/${sessionCode}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    currentSessionId = data.session.id;
                    
                    if (data.session.status === 'in-progress') {
                        // Quiz already started, redirect to quiz page
                        window.location.href = `/competitive-quiz/${currentSessionId}`;
                    } else {
                        // Show waiting room
                        showWaitingRoom(data.session);
                        startPolling();
                    }
                } else {
                    alert(data.message || 'Unable to join session');
                    resetJoinButton();
                }
            } catch (error) {
                console.error('Error joining session:', error);
                alert('Error joining session. Please try again.');
                resetJoinButton();
            }
        }
        
        function resetJoinButton() {
            document.getElementById('joinBtn').disabled = false;
            document.getElementById('joinBtn').innerHTML = '<i class="fas fa-sign-in-alt"></i> Join Session';
        }
        
        function showWaitingRoom(session) {
            document.getElementById('joinForm').style.display = 'none';
            document.getElementById('waitingRoom').style.display = 'block';
            document.getElementById('quizTitle').textContent = session.quizTitle;
            
            // Show countdown if session is scheduled
            if (session.scheduledStartTime) {
                startCountdown(new Date(session.scheduledStartTime));
            }
        }
        
        function startCountdown(startTime) {
            const countdownElement = document.getElementById('countdown');
            const container = countdownElement.parentElement;
            
            const updateCountdown = () => {
                const now = new Date();
                const diff = startTime - now;
                
                if (diff <= 0) {
                    countdownElement.textContent = 'Starting soon...';
                    clearInterval(countdownInterval);
                } else {
                    const minutes = Math.floor(diff / 60000);
                    const seconds = Math.floor((diff % 60000) / 1000);
                    countdownElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
                    container.style.display = 'block';
                }
            };
            
            updateCountdown();
            const countdownInterval = setInterval(updateCountdown, 1000);
        }
        
        function startPolling() {
            pollInterval = setInterval(async () => {
                try {
                    const response = await fetch(`/api/quiz-session/session/${currentSessionId}`);
                    const data = await response.json();
                    
                    if (data.success) {
                        updateParticipantCount(data.session.participantCount);
                        
                        if (data.session.status === 'in-progress') {
                            // Quiz started, redirect
                            clearInterval(pollInterval);
                            window.location.href = `/competitive-quiz/${currentSessionId}`;
                        }
                    }
                } catch (error) {
                    console.error('Error polling session:', error);
                }
            }, 3000); // Poll every 3 seconds
        }
        
        function updateParticipantCount(count) {
            document.getElementById('participantCount').textContent = count;
        }
        
        // Clean up on page unload
        window.addEventListener('beforeunload', () => {
            if (pollInterval) {
                clearInterval(pollInterval);
            }
        });
    </script>
</body>
</html>