<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - SkillOns</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .whiteboard-dashboard {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .dashboard-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .dashboard-header h1 {
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .dashboard-header p {
            color: #666;
            font-size: 16px;
        }

        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .action-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .action-card i {
            font-size: 48px;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .action-card h3 {
            margin-bottom: 10px;
            color: #333;
        }

        .action-card p {
            color: #666;
            margin-bottom: 20px;
            line-height: 1.5;
        }

        .sessions-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }

        .section-header h2 {
            color: #333;
            margin: 0;
        }

        .session-filters {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .filter-group label {
            font-weight: 600;
            color: #555;
            font-size: 14px;
        }

        .filter-group select {
            padding: 8px 12px;
            border: 2px solid #e0e0e0;
            border-radius: 6px;
            font-size: 14px;
        }

        .sessions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .session-card {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            border-left: 4px solid var(--primary-color);
            transition: transform 0.2s ease;
        }

        .session-card:hover {
            transform: translateY(-2px);
        }

        .session-card.live {
            border-left-color: #28a745;
        }

        .session-card.paused {
            border-left-color: #ffc107;
        }

        .session-card.ended {
            border-left-color: #6c757d;
        }

        .session-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .session-title {
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .session-status {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-live {
            background: #d4edda;
            color: #155724;
        }

        .status-paused {
            background: #fff3cd;
            color: #856404;
        }

        .status-ended {
            background: #e2e3e5;
            color: #383d41;
        }

        .session-meta {
            margin-bottom: 15px;
        }

        .session-meta span {
            display: inline-block;
            margin-right: 15px;
            color: #666;
            font-size: 14px;
        }

        .session-meta i {
            margin-right: 5px;
            color: #999;
        }

        .session-actions {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: all 0.2s ease;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-dark);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
        }

        .btn-warning {
            background: #ffc107;
            color: #212529;
        }

        .btn-warning:hover {
            background: #e0a800;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 15px;
            color: #ccc;
        }

        .empty-state h3 {
            margin-bottom: 10px;
            color: #333;
        }

        .stats-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .stat-number {
            font-size: 32px;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 5px;
        }

        .stat-label {
            color: #666;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        @media (max-width: 768px) {
            .whiteboard-dashboard {
                padding: 15px;
            }

            .quick-actions {
                grid-template-columns: 1fr;
            }

            .sessions-grid {
                grid-template-columns: 1fr;
            }

            .session-filters {
                flex-direction: column;
            }

            .stats-overview {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="whiteboard-dashboard">
        <div class="dashboard-header">
            <h1><i class="fas fa-chalkboard"></i> Whiteboard Dashboard</h1>
            <p>Create, manage, and collaborate on interactive whiteboard sessions</p>
        </div>

        <!-- Quick Actions -->
        <div class="quick-actions">
            <div class="action-card">
                <i class="fas fa-plus-circle"></i>
                <h3>Create New Session</h3>
                <p>Start a new whiteboard session for live teaching or recording</p>
                <a href="/whiteboard/create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create Session
                </a>
            </div>

            <div class="action-card">
                <i class="fas fa-users"></i>
                <h3>Join Live Session</h3>
                <p>Join an existing live whiteboard session as a participant</p>
                <button class="btn btn-secondary" onclick="showJoinSessionModal()">
                    <i class="fas fa-sign-in-alt"></i> Join Session
                </button>
            </div>

            <div class="action-card">
                <i class="fas fa-download"></i>
                <h3>Export Sessions</h3>
                <p>Export your whiteboard sessions as images or PDFs for sharing</p>
                <button class="btn btn-secondary" onclick="showExportModal()">
                    <i class="fas fa-file-export"></i> Export
                </button>
            </div>

            <div class="action-card">
                <i class="fas fa-cog"></i>
                <h3>Settings</h3>
                <p>Configure whiteboard preferences and collaboration settings</p>
                <button class="btn btn-secondary" onclick="showSettingsModal()">
                    <i class="fas fa-sliders-h"></i> Configure
                </button>
            </div>
        </div>

        <!-- Stats Overview -->
        <div class="stats-overview">
            <div class="stat-card">
                <div class="stat-number"><%= activeSessions.length %></div>
                <div class="stat-label">Active Sessions</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= archivedSessions.length %></div>
                <div class="stat-label">Archived Sessions</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= activeSessions.filter(s => s.sessionMode === 'recorded').length %></div>
                <div class="stat-label">Recorded Sessions</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= activeSessions.filter(s => s.status === 'live').length %></div>
                <div class="stat-label">Live Sessions</div>
            </div>
        </div>

        <!-- Active Sessions -->
        <div class="sessions-section">
            <div class="section-header">
                <h2><i class="fas fa-play-circle"></i> Active Sessions</h2>
                <div class="session-filters">
                    <div class="filter-group">
                        <label for="statusFilter">Status:</label>
                        <select id="statusFilter" onchange="filterSessions()">
                            <option value="all">All Status</option>
                            <option value="active">Active</option>
                            <option value="paused">Paused</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label for="modeFilter">Mode:</label>
                        <select id="modeFilter" onchange="filterSessions()">
                            <option value="all">All Modes</option>
                            <option value="live">Live</option>
                            <option value="recorded">Recorded</option>
                        </select>
                    </div>
                </div>
            </div>

            <% if (activeSessions && activeSessions.length > 0) { %>
                <div class="sessions-grid" id="activeSessionsGrid">
                    <% activeSessions.forEach(session => { %>
                        <div class="session-card <%= session.status %>" data-status="<%= session.status %>" data-mode="<%= session.sessionMode %>">
                            <div class="session-header">
                                <div>
                                    <div class="session-title"><%= session.title %></div>
                                    <div class="session-status status-<%= session.status %>">
                                        <%= session.status.charAt(0).toUpperCase() + session.status.slice(1) %>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="session-meta">
                                <span><i class="fas fa-graduation-cap"></i> <%= session.gradeLevel %></span>
                                <span><i class="fas fa-book"></i> <%= session.subject %></span>
                                <span><i class="fas fa-clock"></i> <%= new Date(session.createdAt).toLocaleDateString() %></span>
                                <span><i class="fas fa-users"></i> <%= session.participants.length %> participants</span>
                            </div>

                            <div class="session-actions">
                                <a href="/whiteboard/<%= session._id %>" class="btn btn-primary">
                                    <i class="fas fa-edit"></i> Open
                                </a>
                                <% if (session.status === 'active') { %>
                                    <button class="btn btn-warning" onclick="pauseSession('<%= session._id %>')">
                                        <i class="fas fa-pause"></i> Pause
                                    </button>
                                <% } else if (session.status === 'paused') { %>
                                    <button class="btn btn-success" onclick="resumeSession('<%= session._id %>')">
                                        <i class="fas fa-play"></i> Resume
                                    </button>
                                <% } %>
                                <button class="btn btn-secondary" onclick="endSession('<%= session._id %>')">
                                    <i class="fas fa-stop"></i> End
                                </button>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-chalkboard"></i>
                    <h3>No Active Sessions</h3>
                    <p>Create your first whiteboard session to get started with interactive teaching!</p>
                    <a href="/whiteboard/create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create Session
                    </a>
                </div>
            <% } %>
        </div>

        <!-- Archived Sessions -->
        <div class="sessions-section">
            <div class="section-header">
                <h2><i class="fas fa-archive"></i> Archived Sessions</h2>
            </div>

            <% if (archivedSessions && archivedSessions.length > 0) { %>
                <div class="sessions-grid">
                    <% archivedSessions.forEach(session => { %>
                        <div class="session-card ended">
                            <div class="session-header">
                                <div>
                                    <div class="session-title"><%= session.title %></div>
                                    <div class="session-status status-ended">Ended</div>
                                </div>
                            </div>
                            
                            <div class="session-meta">
                                <span><i class="fas fa-graduation-cap"></i> <%= session.gradeLevel %></span>
                                <span><i class="fas fa-book"></i> <%= session.subject %></span>
                                <span><i class="fas fa-clock"></i> <%= new Date(session.createdAt).toLocaleDateString() %></span>
                                <span><i class="fas fa-users"></i> <%= session.participants.length %> participants</span>
                            </div>

                            <div class="session-actions">
                                <button class="btn btn-secondary" onclick="viewSession('<%= session._id %>')">
                                    <i class="fas fa-eye"></i> View
                                </button>
                                <button class="btn btn-primary" onclick="exportSession('<%= session._id %>')">
                                    <i class="fas fa-download"></i> Export
                                </button>
                                <button class="btn btn-warning" onclick="duplicateSession('<%= session._id %>')">
                                    <i class="fas fa-copy"></i> Duplicate
                                </button>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-archive"></i>
                    <h3>No Archived Sessions</h3>
                    <p>Completed sessions will appear here for review and export.</p>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        function filterSessions() {
            const statusFilter = document.getElementById('statusFilter').value;
            const modeFilter = document.getElementById('modeFilter').value;
            const sessions = document.querySelectorAll('.session-card');

            sessions.forEach(session => {
                const status = session.dataset.status;
                const mode = session.dataset.mode;
                
                let show = true;
                
                if (statusFilter !== 'all' && status !== statusFilter) {
                    show = false;
                }
                
                if (modeFilter !== 'all' && mode !== modeFilter) {
                    show = false;
                }
                
                session.style.display = show ? 'block' : 'none';
            });
        }

        function pauseSession(sessionId) {
            updateSessionStatus(sessionId, 'paused');
        }

        function resumeSession(sessionId) {
            updateSessionStatus(sessionId, 'active');
        }

        function endSession(sessionId) {
            if (confirm('Are you sure you want to end this session? This action cannot be undone.')) {
                updateSessionStatus(sessionId, 'ended');
            }
        }

        async function updateSessionStatus(sessionId, status) {
            try {
                const response = await fetch(`/api/whiteboard/${sessionId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status })
                });

                if (response.ok) {
                    location.reload(); // Refresh to show updated status
                } else {
                    const error = await response.json();
                    alert('Error: ' + error.error);
                }
            } catch (error) {
                console.error('Error updating session status:', error);
                alert('Failed to update session status');
            }
        }

        function viewSession(sessionId) {
            window.open(`/whiteboard/${sessionId}`, '_blank');
        }

        function exportSession(sessionId) {
            window.open(`/api/whiteboard/${sessionId}/export`, '_blank');
        }

        function duplicateSession(sessionId) {
            // TODO: Implement session duplication
            alert('Session duplication feature coming soon!');
        }

        function showJoinSessionModal() {
            // TODO: Implement join session modal
            alert('Join session feature coming soon!');
        }

        function showExportModal() {
            // TODO: Implement export modal
            alert('Export modal coming soon!');
        }

        function showSettingsModal() {
            // TODO: Implement settings modal
            alert('Settings modal coming soon!');
        }
    </script>
</body>
</html> 