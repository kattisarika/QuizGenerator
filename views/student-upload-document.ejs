<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Document - SkillOns</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .upload-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .upload-form {
            background: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .form-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .form-header h1 {
            color: #667eea;
            margin-bottom: 10px;
            font-size: 28px;
        }

        .form-header p {
            color: #6b7280;
            font-size: 16px;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #374151;
            font-size: 14px;
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-control:disabled {
            background: #f3f4f6;
            color: #6b7280;
            cursor: not-allowed;
        }

        .file-upload-area {
            border: 2px dashed #d1d5db;
            border-radius: 12px;
            padding: 40px 20px;
            text-align: center;
            background: #f9fafb;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .file-upload-area:hover {
            border-color: #667eea;
            background: #f0f4ff;
        }

        .file-upload-area.dragover {
            border-color: #667eea;
            background: #e0e7ff;
        }

        .file-upload-icon {
            font-size: 48px;
            color: #9ca3af;
            margin-bottom: 16px;
        }

        .file-upload-text {
            color: #374151;
            font-size: 16px;
            margin-bottom: 8px;
        }

        .file-upload-hint {
            color: #6b7280;
            font-size: 14px;
        }

        .file-preview {
            display: none;
            margin-top: 20px;
            padding: 16px;
            background: #f0f9ff;
            border: 1px solid #bae6fd;
            border-radius: 8px;
        }

        .file-preview-content {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .file-preview-icon {
            font-size: 24px;
            color: #0284c7;
        }

        .file-preview-info {
            flex: 1;
        }

        .file-preview-name {
            font-weight: 600;
            color: #0c4a6e;
            margin-bottom: 4px;
        }

        .file-preview-size {
            font-size: 14px;
            color: #0369a1;
        }

        .file-remove-btn {
            background: #ef4444;
            color: white;
            border: none;
            border-radius: 6px;
            padding: 8px 12px;
            cursor: pointer;
            font-size: 14px;
            transition: background 0.3s ease;
        }

        .file-remove-btn:hover {
            background: #dc2626;
        }

        .submit-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 16px 32px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 20px;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .submit-btn:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .error-message {
            color: #ef4444;
            font-size: 14px;
            margin-top: 8px;
            display: none;
        }

        .success-message {
            background: #d1fae5;
            border: 1px solid #a7f3d0;
            color: #065f46;
            padding: 16px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .loading-content {
            background: white;
            padding: 40px;
            border-radius: 12px;
            text-align: center;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
        }

        .loading-spinner {
            font-size: 48px;
            color: #667eea;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .back-btn {
            background: #6b7280;
            color: white;
            border: none;
            border-radius: 8px;
            padding: 12px 24px;
            font-size: 14px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 20px;
            transition: background 0.3s ease;
        }

        .back-btn:hover {
            background: #4b5563;
            color: white;
            text-decoration: none;
        }

        @media (max-width: 768px) {
            .upload-container {
                padding: 10px;
            }

            .upload-form {
                padding: 20px;
            }

            .form-header h1 {
                font-size: 24px;
            }

            .file-upload-area {
                padding: 30px 15px;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="/">SkillOns</a>
            </div>
            <div class="nav-menu">
                <a href="/student/dashboard" class="nav-link">Dashboard</a>
                <a href="/available-quizzes" class="nav-link">Available Quizzes</a>
                <a href="/student/study-material" class="nav-link">Study Material</a>
                <a href="/my-results" class="nav-link">My Results</a>
                <a href="/logout" class="nav-link logout-btn">Logout</a>
            </div>
        </div>
    </nav>

    <div class="upload-container">
        <a href="/student/dashboard" class="back-btn">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>

        <div class="success-message" id="successMessage">
            <i class="fas fa-check-circle"></i> Document uploaded successfully! Your teacher will review it soon.
        </div>

        <div class="upload-form">
            <div class="form-header">
                <h1><i class="fas fa-upload"></i> Upload Document</h1>
                <p>Submit your assignments and homework for teacher review</p>
            </div>

            <form id="uploadForm" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="studentName">Student Name</label>
                    <input type="text" id="studentName" name="studentName" class="form-control"
                           value="<%= user.displayName %>" disabled>
                </div>

                <div class="form-group">
                    <label for="organizationName">Organization</label>
                    <input type="text" id="organizationName" name="organizationName" class="form-control"
                           value="<%= organization ? organization.name : 'Unknown Organization' %>" disabled>
                    <input type="hidden" name="organizationId" value="<%= user.organizationId %>">
                </div>

                <div class="form-group">
                    <label for="assignedTeacher">Assign to Teacher *</label>
                    <select id="assignedTeacher" name="assignedTeacher" class="form-control" required>
                        <option value="">Select a teacher</option>
                        <% if (user.assignedTeacher) { %>
                            <% teachers.forEach(teacher => { %>
                                <option value="<%= teacher._id %>" <%= teacher._id.toString() === user.assignedTeacher.toString() ? 'selected' : '' %>>
                                    <%= teacher.displayName %> (<%= teacher.email %>)
                                </option>
                            <% }); %>
                        <% } else { %>
                            <% teachers.forEach(teacher => { %>
                                <option value="<%= teacher._id %>">
                                    <%= teacher.displayName %> (<%= teacher.email %>)
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                    <div class="error-message" id="teacherError">Please select a teacher</div>
                </div>

                <div class="form-group">
                    <label for="grade">Grade *</label>
                    <select id="grade" name="grade" class="form-control" required>
                        <option value="">Select your grade</option>
                        <option value="Grade 1" <%= user.gradeLevel === '1st grade' ? 'selected' : '' %>>Grade 1</option>
                        <option value="Grade 2" <%= user.gradeLevel === '2nd grade' ? 'selected' : '' %>>Grade 2</option>
                        <option value="Grade 3" <%= user.gradeLevel === '3rd grade' ? 'selected' : '' %>>Grade 3</option>
                        <option value="Grade 4" <%= user.gradeLevel === '4th grade' ? 'selected' : '' %>>Grade 4</option>
                        <option value="Grade 5" <%= user.gradeLevel === '5th grade' ? 'selected' : '' %>>Grade 5</option>
                        <option value="Grade 6" <%= user.gradeLevel === '6th grade' ? 'selected' : '' %>>Grade 6</option>
                        <option value="Grade 7" <%= user.gradeLevel === '7th grade' ? 'selected' : '' %>>Grade 7</option>
                        <option value="Grade 8" <%= user.gradeLevel === '8th grade' ? 'selected' : '' %>>Grade 8</option>
                        <option value="Grade 9" <%= user.gradeLevel === '9th grade' ? 'selected' : '' %>>Grade 9</option>
                        <option value="Grade 10" <%= user.gradeLevel === '10th grade' ? 'selected' : '' %>>Grade 10</option>
                        <option value="Grade 11" <%= user.gradeLevel === '11th grade' ? 'selected' : '' %>>Grade 11</option>
                        <option value="Grade 12" <%= user.gradeLevel === '12th grade' ? 'selected' : '' %>>Grade 12</option>
                    </select>
                    <div class="error-message" id="gradeError">Please select your grade</div>
                </div>

                <div class="form-group">
                    <label for="subject">Subject *</label>
                    <select id="subject" name="subject" class="form-control" required>
                        <option value="">Select subject</option>
                        <option value="Mathematics">Mathematics</option>
                        <option value="Science">Science</option>
                        <option value="English">English</option>
                        <option value="Social Studies">Social Studies</option>
                        <option value="History">History</option>
                        <option value="Geography">Geography</option>
                        <option value="Physics">Physics</option>
                        <option value="Chemistry">Chemistry</option>
                        <option value="Biology">Biology</option>
                        <option value="Computer Science">Computer Science</option>
                        <option value="Other">Other</option>
                    </select>
                    <div class="error-message" id="subjectError">Please select a subject</div>
                </div>

                <div class="form-group">
                    <label for="category">Category *</label>
                    <select id="category" name="category" class="form-control" required>
                        <option value="">Select category</option>
                        <option value="Assignment">Assignment</option>
                        <option value="Doubts">Doubts</option>
                    </select>
                    <div class="error-message" id="categoryError">Please select a category</div>
                </div>

                <div class="form-group">
                    <label for="title">Title *</label>
                    <input type="text" id="title" name="title" class="form-control" 
                           placeholder="Enter assignment title or question" required>
                    <div class="error-message" id="titleError">Please enter a title</div>
                </div>

                <div class="form-group">
                    <label for="description">Description (Optional)</label>
                    <textarea id="description" name="description" class="form-control" rows="3"
                              placeholder="Add any additional details or instructions"></textarea>
                </div>

                <div class="form-group">
                    <label>Upload File *</label>
                    <div class="file-upload-area" id="fileUploadArea">
                        <div class="file-upload-icon">
                            <i class="fas fa-cloud-upload-alt"></i>
                        </div>
                        <div class="file-upload-text">
                            Click to upload or drag and drop
                        </div>
                        <div class="file-upload-hint">
                            PDF, JPG, PNG files up to 10MB
                        </div>
                        <input type="file" id="fileInput" name="file" accept=".pdf,.jpg,.jpeg,.png" style="display: none;" required>
                    </div>
                    <div class="error-message" id="fileError">Please select a file to upload</div>
                    
                    <div class="file-preview" id="filePreview">
                        <div class="file-preview-content">
                            <div class="file-preview-icon">
                                <i class="fas fa-file"></i>
                            </div>
                            <div class="file-preview-info">
                                <div class="file-preview-name" id="fileName"></div>
                                <div class="file-preview-size" id="fileSize"></div>
                            </div>
                            <button type="button" class="file-remove-btn" id="removeFileBtn">
                                <i class="fas fa-times"></i> Remove
                            </button>
                        </div>
                    </div>
                </div>

                <button type="submit" class="submit-btn" id="submitBtn">
                    <i class="fas fa-upload"></i> Upload Document
                </button>
            </form>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner">
                <i class="fas fa-spinner"></i>
            </div>
            <h3 style="margin-top: 20px; color: #667eea;">Uploading Document...</h3>
            <p style="color: #6b7280;">Please wait while we process your file</p>
        </div>
    </div>

    <script>
        const fileUploadArea = document.getElementById('fileUploadArea');
        const fileInput = document.getElementById('fileInput');
        const filePreview = document.getElementById('filePreview');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');
        const removeFileBtn = document.getElementById('removeFileBtn');
        const uploadForm = document.getElementById('uploadForm');
        const submitBtn = document.getElementById('submitBtn');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const successMessage = document.getElementById('successMessage');

        // File upload area click handler
        fileUploadArea.addEventListener('click', () => {
            fileInput.click();
        });

        // Drag and drop handlers
        fileUploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            fileUploadArea.classList.add('dragover');
        });

        fileUploadArea.addEventListener('dragleave', () => {
            fileUploadArea.classList.remove('dragover');
        });

        fileUploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            fileUploadArea.classList.remove('dragover');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFileSelect(files[0]);
            }
        });

        // File input change handler
        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length > 0) {
                handleFileSelect(e.target.files[0]);
            }
        });

        // Remove file button handler
        removeFileBtn.addEventListener('click', () => {
            fileInput.value = '';
            filePreview.style.display = 'none';
            fileUploadArea.style.display = 'block';
            clearError('fileError');
        });

        // Handle file selection
        function handleFileSelect(file) {
            // Validate file type
            const allowedTypes = ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                showError('fileError', 'Please select a PDF, JPG, or PNG file');
                return;
            }

            // Validate file size (10MB)
            const maxSize = 10 * 1024 * 1024;
            if (file.size > maxSize) {
                showError('fileError', 'File size must be less than 10MB');
                return;
            }

            // Show file preview
            fileName.textContent = file.name;
            fileSize.textContent = formatFileSize(file.size);
            filePreview.style.display = 'block';
            fileUploadArea.style.display = 'none';
            clearError('fileError');

            // Update file input
            const dt = new DataTransfer();
            dt.items.add(file);
            fileInput.files = dt.files;
        }

        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Show error message
        function showError(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }

        // Clear error message
        function clearError(elementId) {
            const errorElement = document.getElementById(elementId);
            errorElement.style.display = 'none';
        }

        // Form submission handler
        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            // Clear all errors
            clearError('teacherError');
            clearError('gradeError');
            clearError('subjectError');
            clearError('categoryError');
            clearError('titleError');
            clearError('fileError');

            // Validate form
            let isValid = true;

            if (!document.getElementById('assignedTeacher').value) {
                showError('teacherError', 'Please select a teacher');
                isValid = false;
            }

            if (!document.getElementById('grade').value) {
                showError('gradeError', 'Please select your grade');
                isValid = false;
            }

            if (!document.getElementById('subject').value) {
                showError('subjectError', 'Please select a subject');
                isValid = false;
            }

            if (!document.getElementById('category').value) {
                showError('categoryError', 'Please select a category');
                isValid = false;
            }

            if (!document.getElementById('title').value.trim()) {
                showError('titleError', 'Please enter a title');
                isValid = false;
            }

            if (!fileInput.files.length) {
                showError('fileError', 'Please select a file to upload');
                isValid = false;
            }

            if (!isValid) {
                return;
            }

            // Show loading overlay
            loadingOverlay.style.display = 'flex';
            submitBtn.disabled = true;

            try {
                const formData = new FormData(uploadForm);
                
                const response = await fetch('/api/student/upload-document', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    // Show success message
                    successMessage.style.display = 'block';
                    uploadForm.style.display = 'none';
                    
                    // Scroll to top
                    window.scrollTo(0, 0);
                    
                    // Redirect to dashboard after 3 seconds
                    setTimeout(() => {
                        window.location.href = '/student/dashboard';
                    }, 3000);
                } else {
                    throw new Error(result.message || 'Upload failed');
                }
            } catch (error) {
                console.error('Upload error:', error);
                alert('Upload failed: ' + error.message);
            } finally {
                loadingOverlay.style.display = 'none';
                submitBtn.disabled = false;
            }
        });
    </script>
</body>
</html>
