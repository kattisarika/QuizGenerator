<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacher Dashboard - SkillOns</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        /* Enhanced Professional Styles for Teacher Dashboard */
        :root {
            --primary-color: #4F46E5;
            --primary-dark: #4338CA;
            --secondary-color: #7C3AED;
            --success-color: #10B981;
            --warning-color: #F59E0B;
            --danger-color: #EF4444;
            --info-color: #3B82F6;
            --dark-color: #1F2937;
            --light-color: #F9FAFB;
            --border-radius: 12px;
            --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 25px rgba(0,0,0,0.1);
            --shadow-xl: 0 20px 40px rgba(0,0,0,0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: var(--dark-color);
        }

        /* Enhanced Navbar */
        .navbar {
            background: rgba(255, 255, 255, 0.98);
            backdrop-filter: blur(10px);
            box-shadow: var(--shadow-md);
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .nav-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            height: 70px;
        }

        .nav-logo a {
            font-size: 24px;
            font-weight: 700;
            color: var(--primary-color);
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .nav-logo a::before {
            content: "üë®‚Äçüè´";
            font-size: 28px;
        }

        /* Hamburger Menu */
        .hamburger {
            display: none;
            flex-direction: column;
            cursor: pointer;
            padding: 5px;
            z-index: 1001;
        }

        .hamburger span {
            width: 25px;
            height: 3px;
            background: var(--primary-color);
            margin: 3px 0;
            transition: all 0.3s ease;
            border-radius: 3px;
        }

        .hamburger.active span:nth-child(1) {
            transform: rotate(45deg) translate(6px, 6px);
        }

        .hamburger.active span:nth-child(2) {
            opacity: 0;
        }

        .hamburger.active span:nth-child(3) {
            transform: rotate(-45deg) translate(7px, -7px);
        }

        .nav-menu {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .nav-link {
            padding: 10px 16px;
            color: var(--dark-color);
            text-decoration: none;
            border-radius: var(--border-radius);
            transition: all 0.3s ease;
            font-weight: 500;
            white-space: nowrap;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .nav-link:hover {
            background: var(--light-color);
            color: var(--primary-color);
            transform: translateY(-2px);
        }

        .nav-link.logout-btn {
            background: var(--danger-color);
            color: white;
        }

        .nav-link.logout-btn:hover {
            background: #DC2626;
            transform: translateY(-2px);
        }

        /* Mobile Menu Overlay */
        .mobile-menu-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        .mobile-menu-overlay.active {
            display: block;
        }

        /* Main Content */
        .main-content {
            margin-top: 70px;
            padding: 20px;
            min-height: calc(100vh - 70px);
        }

        .dashboard-container {
            max-width: 1400px;
            margin: 0 auto;
            animation: fadeInUp 0.6s ease;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Enhanced Dashboard Header */
        .dashboard-header {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: var(--shadow-lg);
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .user-avatar, .user-avatar-placeholder {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 32px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            box-shadow: var(--shadow-md);
        }

        .user-avatar {
            object-fit: cover;
        }

        .user-details h1 {
            font-size: 28px;
            color: var(--dark-color);
            margin-bottom: 5px;
        }

        .user-details p {
            color: #6B7280;
            margin-bottom: 10px;
        }

        .role-badge {
            display: inline-block;
            padding: 6px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            background: linear-gradient(135deg, var(--info-color), var(--primary-color));
            color: white;
        }

        /* Organization Info */
        .organization-info {
            margin-top: 20px;
            padding: 20px;
            background: linear-gradient(135deg, rgba(79, 70, 229, 0.05), rgba(124, 58, 237, 0.05));
            border-radius: var(--border-radius);
            border-left: 4px solid var(--primary-color);
        }

        .organization-info h3 {
            color: var(--dark-color);
            margin-bottom: 15px;
            font-size: 20px;
        }

        .organization-code-section {
            margin-top: 15px;
        }

        .code-display {
            display: flex;
            gap: 10px;
            align-items: center;
            margin-top: 10px;
        }

        .code-input {
            flex: 1;
            padding: 12px;
            border: 2px solid #E5E7EB;
            border-radius: var(--border-radius);
            font-size: 16px;
            font-weight: 600;
            color: var(--primary-color);
            background: var(--light-color);
        }

        .copy-btn {
            padding: 12px 20px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .copy-btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }

        /* Enhanced Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 25px;
            display: flex;
            align-items: center;
            gap: 20px;
            box-shadow: var(--shadow-md);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }

        .stat-card:nth-child(1) .stat-icon {
            background: linear-gradient(135deg, #3B82F6, #2563EB);
            color: white;
        }

        .stat-card:nth-child(2) .stat-icon {
            background: linear-gradient(135deg, #10B981, #059669);
            color: white;
        }

        .stat-card:nth-child(3) .stat-icon {
            background: linear-gradient(135deg, #F59E0B, #D97706);
            color: white;
        }

        .stat-info h3 {
            font-size: 14px;
            color: #6B7280;
            margin-bottom: 5px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stat-number {
            font-size: 32px;
            font-weight: 700;
            color: var(--dark-color);
        }

        /* Action Cards */
        .action-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .action-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            text-align: center;
            box-shadow: var(--shadow-md);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .action-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-xl);
        }

        .action-card-icon {
            font-size: 48px;
            margin-bottom: 15px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .action-card h3 {
            font-size: 20px;
            margin-bottom: 10px;
            color: var(--dark-color);
        }

        .action-card p {
            color: #6B7280;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        /* Recorrection Requests Section */
        .dashboard-section {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: var(--shadow-md);
        }

        .section-header {
            margin-bottom: 25px;
            text-align: center;
        }

        .section-header h2 {
            font-size: 24px;
            color: var(--dark-color);
            margin-bottom: 10px;
        }

        .section-header p {
            color: #6B7280;
            font-size: 16px;
        }

        .recorrection-requests {
            min-height: 200px;
        }

        .loading-state {
            text-align: center;
            padding: 40px;
            color: #6B7280;
        }

        .loading-state i {
            font-size: 32px;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .recorrection-card {
            background: #f9fafb;
            border: 1px solid #e5e7eb;
            border-radius: var(--border-radius);
            padding: 20px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }

        .recorrection-card:hover {
            border-color: var(--primary-color);
            box-shadow: var(--shadow-sm);
        }

        .recorrection-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .student-info h4 {
            color: var(--dark-color);
            margin-bottom: 5px;
        }

        .student-info p {
            color: #6B7280;
            font-size: 14px;
        }

        .recorrection-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            background: #fbbf24;
            color: #92400e;
        }

        .recorrection-details {
            margin-bottom: 20px;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            padding: 8px 0;
            border-bottom: 1px solid #f3f4f6;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            font-weight: 600;
            color: var(--dark-color);
        }

        .detail-value {
            color: #6B7280;
        }

        .recorrection-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn-sm {
            padding: 8px 16px;
            font-size: 14px;
            border-radius: 6px;
        }

        .btn-outline-primary {
            background: transparent;
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
        }

        .btn-outline-primary:hover {
            background: var(--primary-color);
            color: white;
        }

        .btn-success {
            background: var(--success-color);
            border-color: var(--success-color);
            color: white;
        }

        .btn-success:hover {
            background: #059669;
            border-color: #059669;
        }

        /* Pagination Styles */
        .pagination-container {
            margin-top: 30px;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .pagination-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e5e7eb;
        }

        .page-size-selector {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .page-size-selector label {
            font-size: 14px;
            color: #4B5563;
        }

        .page-size-selector select {
            padding: 8px 12px;
            border: 1px solid #D1D5DB;
            border-radius: 6px;
            font-size: 14px;
            color: #374151;
            background-color: #F9FAFB;
        }

        .pagination-info {
            text-align: center;
            margin-bottom: 15px;
            color: #6b7280;
            font-size: 14px;
        }

        .pagination-controls {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .page-indicator {
            background: #f3f4f6;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            min-width: 120px;
            text-align: center;
        }

        .pagination-controls .btn {
            min-width: 100px;
        }

        .pagination-controls .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .pagination-controls .btn:not(:disabled):hover {
            transform: translateY(-1px);
        }

        /* Error and Empty States */
        .error-state {
            text-align: center;
            padding: 40px;
            color: #dc2626;
        }

        .error-state i {
            font-size: 32px;
            margin-bottom: 15px;
            color: #dc2626;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #6b7280;
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 15px;
            color: #10b981;
        }

        .empty-state h3 {
            font-size: 20px;
            margin-bottom: 10px;
            color: #374151;
        }

        .empty-state p {
            font-size: 16px;
            line-height: 1.5;
        }

        /* Enhanced Buttons */
        .btn {
            padding: 12px 24px;
            border-radius: var(--border-radius);
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 16px;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(79, 70, 229, 0.3);
        }

        .btn-secondary {
            background: var(--light-color);
            color: var(--dark-color);
            border: 2px solid #E5E7EB;
        }

        .btn-secondary:hover {
            background: white;
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        /* Recent Activity Styles */
        .recent-activity {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            box-shadow: var(--shadow-md);
            margin-bottom: 30px;
        }

        .recent-activity h3 {
            font-size: 22px;
            color: var(--dark-color);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .quiz-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .quiz-item {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 20px;
            background: var(--light-color);
            border-radius: var(--border-radius);
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .quiz-item:hover {
            transform: translateX(5px);
            border-color: var(--primary-color);
            box-shadow: var(--shadow-md);
        }

        .quiz-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
            flex-shrink: 0;
        }

        .quiz-content {
            flex: 1;
            min-width: 0;
        }

        .quiz-content h4 {
            font-size: 18px;
            color: var(--dark-color);
            margin-bottom: 5px;
        }

        .quiz-content p {
            color: #6B7280;
            font-size: 14px;
            margin-bottom: 10px;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .quiz-meta {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .quiz-status {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .quiz-status.approved {
            background: #D1FAE5;
            color: #065F46;
        }

        .quiz-status.pending {
            background: #FEF3C7;
            color: #92400E;
        }

        .quiz-date {
            color: #9CA3AF;
            font-size: 13px;
        }

        .quiz-actions {
            display: flex;
            gap: 10px;
            flex-shrink: 0;
        }

        .quiz-actions .btn {
            padding: 8px 16px;
            font-size: 14px;
        }

        .badge {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            margin-left: 8px;
        }

        .bg-warning {
            background: #FEF3C7;
            color: #92400E;
        }

        .bg-info {
            background: #DBEAFE;
            color: #1E40AF;
        }

        /* Footer Styles */
        .footer {
            background: white;
            padding: 20px 0;
            margin-top: 60px;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.05);
        }

        .footer-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
            text-align: center;
            color: #6B7280;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 2000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            animation: fadeIn 0.3s ease;
        }

        .modal.show {
            display: block;
        }

        .modal-content {
            background: white;
            margin: 50px auto;
            padding: 0;
            border-radius: var(--border-radius);
            width: 90%;
            max-width: 800px;
            max-height: 80vh;
            overflow: hidden;
            animation: slideIn 0.3s ease;
        }

        @keyframes slideIn {
            from {
                transform: translateY(-50px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .modal-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h2 {
            font-size: 24px;
            margin: 0;
        }

        .close {
            color: white;
            font-size: 32px;
            font-weight: bold;
            cursor: pointer;
            background: none;
            border: none;
            padding: 0;
            line-height: 1;
        }

        .close:hover {
            opacity: 0.8;
        }

        .modal-body {
            padding: 30px;
            max-height: calc(80vh - 80px);
            overflow-y: auto;
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .hamburger {
                display: flex;
            }

            .nav-menu {
                position: fixed;
                top: 70px;
                right: -100%;
                width: 280px;
                height: calc(100vh - 70px);
                background: white;
                flex-direction: column;
                padding: 30px 20px;
                gap: 15px;
                transition: all 0.3s ease;
                box-shadow: -5px 0 15px rgba(0,0,0,0.1);
                overflow-y: auto;
                align-items: stretch;
            }

            .nav-menu.active {
                right: 0;
            }

            .nav-link {
                padding: 15px 20px;
                border-radius: var(--border-radius);
                justify-content: flex-start;
            }

            .main-content {
                padding: 15px;
            }

            .dashboard-header {
                padding: 20px;
            }

            .user-details h1 {
                font-size: 22px;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .action-cards {
                grid-template-columns: 1fr;
            }

            .stat-number {
                font-size: 28px;
            }

            .code-display {
                flex-direction: column;
            }

            .code-input {
                width: 100%;
            }

            .copy-btn {
                width: 100%;
            }
        }

        @media (max-width: 480px) {
            .nav-logo a {
                font-size: 18px;
            }

            .nav-logo a::before {
                font-size: 22px;
            }

            .user-avatar, .user-avatar-placeholder {
                width: 60px;
                height: 60px;
                font-size: 24px;
            }

            .user-details h1 {
                font-size: 20px;
            }

            .btn {
                padding: 10px 20px;
                font-size: 14px;
            }

            .action-card {
                padding: 20px;
            }

            .action-card-icon {
                font-size: 36px;
            }

            .recent-activity {
                padding: 20px;
            }

            .quiz-item {
                flex-direction: column;
                text-align: center;
                padding: 15px;
            }

            .quiz-content h4 {
                white-space: normal;
            }

            .quiz-meta {
                justify-content: center;
            }

            .quiz-actions {
                width: 100%;
                flex-direction: column;
            }

            .quiz-actions .btn {
                width: 100%;
            }

            .modal-content {
                width: 95%;
                margin: 20px auto;
            }

            .modal-header {
                padding: 15px 20px;
            }

            .modal-header h2 {
                font-size: 20px;
            }

            .modal-body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="/">SkillOns</a>
            </div>
            <div class="hamburger" onclick="toggleMobileMenu()">
                <span></span>
                <span></span>
                <span></span>
            </div>
            <div class="nav-menu" id="navMenu">
                <a href="/teacher/dashboard" class="nav-link">
                    <i class="fas fa-home"></i> Dashboard
                </a>
                <a href="/create-quiz" class="nav-link">
                    <i class="fas fa-plus-circle"></i> Create Quiz
                </a>
                <a href="/competitive-quiz" class="nav-link">
                    <i class="fas fa-trophy"></i> Competitive Sessions
                </a>
                <a href="/teacher/post-content" class="nav-link">
                    <i class="fas fa-upload"></i> Post Content
                </a>
                <a href="/teacher/assign-students" class="nav-link">
                    <i class="fas fa-user-plus"></i> Assign Students
                </a>
                <a href="/teacher/student-results" class="nav-link">
                    <i class="fas fa-chart-bar"></i> Student Results
                </a>
                <a href="/select-role" class="nav-link">
                    <i class="fas fa-exchange-alt"></i> Change Role
                </a>
                <a href="/logout" class="nav-link logout-btn">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        </div>
    </nav>
    <div class="mobile-menu-overlay" onclick="toggleMobileMenu()"></div>

    <main class="main-content">
        <div class="dashboard-container">
            <div class="dashboard-header">
                <div class="user-info">
                    <% if (user.photos && user.photos.length > 0) { %>
                        <img src="<%= user.photos[0].value %>" alt="Profile" class="user-avatar">
                    <% } else { %>
                        <div class="user-avatar-placeholder">
                            <i class="fas fa-chalkboard-teacher"></i>
                        </div>
                    <% } %>
                    <div class="user-details">
                        <h1>Welcome, <%= user.displayName %>!</h1>
                        <p><%= user.email %></p>
                        <span class="role-badge teacher-badge">Teacher</span>
                        <% if (organization) { %>
                            <div class="organization-info">
                                <h3><i class="fas fa-school me-2"></i><%= organization.name %></h3>
                                <div class="organization-code-section">
                                    <div class="organization-code">
                                        <label>Student Signup Code:</label>
                                        <div class="code-display">
                                            <input type="text" value="<%= organization.subdomain %>" readonly id="orgCode" class="code-input">
                                            <button onclick="copyOrgCode()" class="copy-btn" title="Copy to clipboard">
                                                <i class="fas fa-copy"></i>
                                            </button>
                                        </div>
                                        <small class="help-text">
                                            <i class="fas fa-info-circle me-1"></i>
                                            Share this code with students so they can join your organization
                                        </small>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <div class="dashboard-content">
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-file-alt"></i>
                        </div>
                        <div class="stat-info">
                            <h3>Total Quizzes</h3>
                            <p class="stat-number"><%= quizzes.length %></p>
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-info">
                            <h3>Approved Quizzes</h3>
                            <p class="stat-number"><%= quizzes.filter(q => q.isApproved).length %></p>
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-info">
                            <h3>Pending Approval</h3>
                            <p class="stat-number"><%= quizzes.filter(q => !q.isApproved).length %></p>
                        </div>
                    </div>
                </div>

                <div class="action-cards">
                    <div class="action-card">
                        <div class="action-card-icon">
                            <i class="fas fa-plus-circle"></i>
                        </div>
                        <h3>Create New Quiz</h3>
                        <p>Design engaging quizzes with multiple question types and instant feedback</p>
                        <a href="/create-quiz" class="btn btn-primary">
                            <i class="fas fa-magic"></i> Create Quiz
                        </a>
                    </div>
                    
                    <div class="action-card">
                        <div class="action-card-icon">
                            <i class="fas fa-trophy"></i>
                        </div>
                        <h3>Competitive Sessions</h3>
                        <p>Host live competitive quiz sessions with real-time leaderboards</p>
                        <a href="/competitive-quiz" class="btn btn-primary">
                            <i class="fas fa-bolt"></i> Manage Sessions
                        </a>
                    </div>
                    
                    <div class="action-card">
                        <div class="action-card-icon">
                            <i class="fas fa-folder-open"></i>
                        </div>
                        <h3>My Quizzes</h3>
                        <p>View, edit, and manage all your created quizzes in one place</p>
                        <button class="btn btn-secondary" onclick="showQuizModal()">
                            <i class="fas fa-eye"></i> View Quizzes
                        </button>
                    </div>
                    
                    <div class="action-card">
                        <div class="action-card-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h3>Student Analytics</h3>
                        <p>Track student performance with detailed insights and progress reports</p>
                        <a href="/teacher/student-results" class="btn btn-secondary">
                            <i class="fas fa-chart-bar"></i> View Analytics
                        </a>
                    </div>
                    
                    <div class="action-card">
                        <div class="action-card-icon">
                            <i class="fas fa-upload"></i>
                        </div>
                        <h3>Study Materials</h3>
                        <p>Upload and share educational content with your students</p>
                        <a href="/teacher/post-content" class="btn btn-secondary">
                            <i class="fas fa-cloud-upload-alt"></i> Post Content
                        </a>
                    </div>
                    
                    <div class="action-card">
                        <div class="action-card-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <h3>Student Management</h3>
                        <p>Assign quizzes and manage student access to your content</p>
                        <a href="/teacher/assign-students" class="btn btn-secondary">
                            <i class="fas fa-user-plus"></i> Manage Students
                        </a>
                    </div>
                </div>

                <div class="recent-activity" id="recentQuizzesSection">
                    <h3>Recent Quizzes</h3>
                    <% if (quizzes.length > 0) { %>
                        <div class="quiz-list">
                            <% quizzes.forEach(quiz => { %>
                                <div class="quiz-item" data-quiz-id="<%= quiz._id %>">
                                    <div class="quiz-icon">
                                        <i class="fas <%= quiz.quizType === 'competitive' ? 'fa-trophy' : 'fa-file-alt' %>"></i>
                                    </div>
                                    <div class="quiz-content">
                                        <h4>
                                            <%= quiz.title %>
                                            <% if (quiz.quizType === 'competitive') { %>
                                                <span class="badge bg-warning text-dark ms-2" style="font-size: 12px;">
                                                    <i class="fas fa-trophy"></i> Competitive
                                                </span>
                                            <% } else { %>
                                                <span class="badge bg-info text-white ms-2" style="font-size: 12px;">
                                                    <i class="fas fa-book"></i> Regular
                                                </span>
                                            <% } %>
                                        </h4>
                                        <p><%= quiz.description %></p>
                                        <div class="quiz-meta">
                                            <span class="quiz-status <%= quiz.isApproved ? 'approved' : 'pending' %>">
                                                <%= quiz.isApproved ? 'Approved' : 'Pending Approval' %>
                                            </span>
                                            <span class="quiz-date">
                                                <%= new Date(quiz.createdAt).toLocaleDateString() %>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="quiz-actions">
                                        <a href="/view-quiz/<%= quiz._id %>" class="btn btn-sm btn-secondary" title="View Quiz">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="/quiz-results/<%= quiz._id %>" class="btn btn-sm btn-info" title="View Results">
                                            <i class="fas fa-chart-bar"></i>
                                        </a>
                                        <% if (quiz.quizType === 'competitive') { %>
                                            <a href="/competitive-quiz" class="btn btn-sm btn-success" title="Manage Sessions">
                                                <i class="fas fa-trophy"></i>
                                            </a>
                                        <% } %>
                                        <button class="btn btn-sm btn-warning fix-options-btn" title="Fix Options" data-quiz-id="<%= quiz._id %>">
                                            <i class="fas fa-wrench"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger delete-quiz-btn" title="Delete Quiz" data-quiz-id="<%= quiz._id %>">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="empty-state">
                            <i class="fas fa-file-alt"></i>
                            <p>No quizzes created yet. Start by creating your first quiz!</p>
                            <a href="/create-quiz" class="btn btn-primary">Create Your First Quiz</a>
                        </div>
                    <% } %>
                </div>

                <!-- Pagination Controls for Recent Quizzes -->
                <% if (pagination.totalPages > 1) { %>
                    <div class="pagination-container">
                        <div class="pagination-header">
                            <div class="page-size-selector">
                                <label for="quizPageSize">Show:</label>
                                <select id="quizPageSize" onchange="changeQuizPageSize()">
                                    <option value="5">5 per page</option>
                                    <option value="10" selected>10 per page</option>
                                    <option value="20">20 per page</option>
                                    <option value="50">50 per page</option>
                                </select>
                            </div>
                            <div class="pagination-info">
                                <span>Showing <%= ((pagination.currentPage - 1) * pagination.limit) + 1 %>-<%= Math.min(pagination.currentPage * pagination.limit, pagination.totalQuizzes) %> of <%= pagination.totalQuizzes %> quizzes</span>
                            </div>
                        </div>
                        <div class="pagination-controls">
                            <a href="?page=<%= pagination.prevPage %>&limit=<%= pagination.limit %>" class="btn btn-sm btn-outline-primary <%= !pagination.hasPrevPage ? 'disabled' : '' %>" <%= !pagination.hasPrevPage ? 'onclick="return false;"' : '' %>>
                                <i class="fas fa-chevron-left"></i> Previous
                            </a>
                            <span class="page-indicator">
                                Page <span><%= pagination.currentPage %></span> of <span><%= pagination.totalPages %></span>
                            </span>
                            <a href="?page=<%= pagination.nextPage %>&limit=<%= pagination.limit %>" class="btn btn-sm btn-outline-primary <%= !pagination.hasNextPage ? 'disabled' : '' %>" <%= !pagination.hasNextPage ? 'onclick="return false;"' : '' %>>
                                Next <i class="fas fa-chevron-right"></i>
                            </a>
                        </div>
                    </div>
                <% } %>

            </div>
        </div>
    </main>

    <!-- Quiz Modal -->
    <div id="quizModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2><i class="fas fa-file-alt me-2"></i>My Quizzes</h2>
                <span class="close" onclick="closeQuizModal()">&times;</span>
            </div>
            <div class="modal-body">
                <div class="quiz-filters">
                    <button class="filter-btn active" data-filter="all">All Quizzes</button>
                    <button class="filter-btn" data-filter="approved">Approved</button>
                    <button class="filter-btn" data-filter="pending">Pending</button>
                </div>
                <div id="quizModalList" class="quiz-modal-list">
                    <!-- Quizzes will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Recorrection Requests Section -->
    <div class="dashboard-section">
        <div class="section-header">
            <h2><i class="fas fa-redo me-2"></i>Recorrection Requests</h2>
            <p>Review and re-evaluate student quiz submissions</p>
        </div>
        
        <div class="recorrection-requests" id="recorrectionRequests">
            <!-- Recorrection requests will be loaded here -->
            <div class="loading-state">
                <i class="fas fa-spinner fa-spin"></i>
                <p>Loading recorrection requests...</p>
            </div>
        </div>
        
        <!-- Pagination Controls -->
        <div class="pagination-container" id="paginationContainer" style="display: none;">
            <div class="pagination-header">
                <div class="page-size-selector">
                    <label for="pageSize">Show:</label>
                    <select id="pageSize" onchange="changePageSize()">
                        <option value="5">5 per page</option>
                        <option value="10" selected>10 per page</option>
                        <option value="20">20 per page</option>
                        <option value="50">50 per page</option>
                    </select>
                </div>
                <div class="pagination-info">
                    <span id="paginationInfo">Showing 0 of 0 requests</span>
                </div>
            </div>
            <div class="pagination-controls">
                <button class="btn btn-sm btn-outline-primary" id="prevPageBtn" onclick="changePage('prev')" disabled>
                    <i class="fas fa-chevron-left"></i> Previous
                </button>
                <span class="page-indicator">
                    Page <span id="currentPage">1</span> of <span id="totalPages">1</span>
                </span>
                <button class="btn btn-sm btn-outline-primary" id="nextPageBtn" onclick="changePage('next')" disabled>
                    Next <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

    <footer class="footer">
        <div class="footer-content">
            <p>&copy; 2025 SkillOns. All rights reserved.</p>
        </div>
    </footer>

    <script>
        // Hamburger Menu Toggle
        function toggleMobileMenu() {
            const hamburger = document.querySelector('.hamburger');
            const navMenu = document.getElementById('navMenu');
            const overlay = document.querySelector('.mobile-menu-overlay');
            
            hamburger.classList.toggle('active');
            navMenu.classList.toggle('active');
            overlay.classList.toggle('active');
            
            // Prevent body scroll when menu is open
            if (navMenu.classList.contains('active')) {
                document.body.style.overflow = 'hidden';
            } else {
                document.body.style.overflow = 'auto';
            }
        }
        
        // Close mobile menu when clicking on a link
        document.addEventListener('DOMContentLoaded', function() {
            const navLinks = document.querySelectorAll('.nav-menu .nav-link');
            navLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    if (window.innerWidth <= 768) {
                        // Don't close immediately for modal triggers
                        if (!this.getAttribute('onclick')) {
                            toggleMobileMenu();
                        }
                    }
                });
            });
            
            // Close menu on window resize if open
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    const hamburger = document.querySelector('.hamburger');
                    const navMenu = document.getElementById('navMenu');
                    const overlay = document.querySelector('.mobile-menu-overlay');
                    
                    hamburger.classList.remove('active');
                    navMenu.classList.remove('active');
                    overlay.classList.remove('active');
                    document.body.style.overflow = 'auto';
                }
            });
        });
        
        // Quiz data from server
        const quizData = <%- JSON.stringify(quizzes) %>;
        
        // Modal functionality
        function showQuizModal() {
            console.log('Opening quiz modal from teacher dashboard');
            const modal = document.getElementById('quizModal');
            modal.style.display = 'block';
            modal.classList.add('show');
            loadQuizModal();
        }
        
        function closeQuizModal() {
            const modal = document.getElementById('quizModal');
            modal.style.display = 'none';
            modal.classList.remove('show');
        }
        
        function loadQuizModal() {
            const quizList = document.getElementById('quizModalList');
            quizList.innerHTML = '';
            
            quizData.forEach(quiz => {
                const quizCard = createQuizCard(quiz);
                quizList.appendChild(quizCard);
            });
        }
        
        function createQuizCard(quiz) {
            const card = document.createElement('div');
            card.className = 'quiz-modal-card';
            card.innerHTML = `
                <div class="quiz-card-header">
                    <div class="quiz-card-title">
                        <h3>${quiz.title}</h3>
                        <span class="quiz-status ${quiz.isApproved ? 'approved' : 'pending'}">
                            ${quiz.isApproved ? 'Approved' : 'Pending Approval'}
                        </span>
                    </div>
                    <div class="quiz-card-actions">
                        <button class="btn btn-sm btn-primary" onclick="viewQuizDetails('${quiz._id}')">
                            <i class="fas fa-eye"></i> View Details
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="deleteQuizFromModal('${quiz._id}', this)">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                </div>
                <div class="quiz-card-content">
                    <p><strong>Description:</strong> ${quiz.description}</p>
                    <p><strong>Questions:</strong> ${quiz.questions.length}</p>
                    <p><strong>Created:</strong> ${new Date(quiz.createdAt).toLocaleDateString()}</p>
                </div>
            `;
            return card;
        }
        
        function viewQuizDetails(quizId) {
            window.open(`/view-quiz/${quizId}`, '_blank');
        }
        
        function deleteQuizFromModal(quizId, button) {
            const quizCard = button.closest('.quiz-modal-card');
            const quizTitle = quizCard.querySelector('h3').textContent;
            
            if (confirm(`Are you sure you want to delete "${quizTitle}"? This action cannot be undone.`)) {
                fetch(`/delete-quiz/${quizId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Quiz deleted successfully!', 'success');
                        quizCard.remove();
                        updateStats();
                    } else {
                        showNotification(data.message || 'Error deleting quiz', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error deleting quiz', 'error');
                });
            }
        }
        

        
        // Global function to ensure quiz modal is hidden
        function ensureQuizModalHidden() {
            const modal = document.getElementById('quizModal');
            if (modal) {
                modal.style.display = 'none';
                modal.classList.remove('show');
                console.log('Quiz modal forcibly hidden');
            }
        }

        // Ensure quiz modal is hidden on page load and filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Teacher dashboard page loaded');
            
            // Explicitly ensure modal is hidden on page load
            ensureQuizModalHidden();
            
            // Add additional safety checks after short delays
            setTimeout(ensureQuizModalHidden, 100);
            setTimeout(ensureQuizModalHidden, 500);
            
            const filterButtons = document.querySelectorAll('.filter-btn');
            
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Remove active class from all buttons
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    // Add active class to clicked button
                    this.classList.add('active');
                    
                    const filter = this.getAttribute('data-filter');
                    filterQuizzes(filter);
                });
            });
        });
        
        function filterQuizzes(filter) {
            const quizCards = document.querySelectorAll('.quiz-modal-card');
            
            quizCards.forEach(card => {
                const status = card.querySelector('.quiz-status').textContent.trim();
                
                if (filter === 'all') {
                    card.style.display = 'block';
                } else if (filter === 'approved' && status === 'Approved') {
                    card.style.display = 'block';
                } else if (filter === 'pending' && status === 'Pending Approval') {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        }
        
        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('quizModal');
            if (event.target === modal) {
                closeQuizModal();
            }
        }
        
        // Fix options functionality and additional modal protection
        document.addEventListener('DOMContentLoaded', function() {
            // Additional safety check to ensure modal is hidden
            ensureQuizModalHidden();
            
            const fixButtons = document.querySelectorAll('.fix-options-btn');
            
            fixButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const quizId = this.getAttribute('data-quiz-id');
                    const quizItem = this.closest('.quiz-item');
                    const quizTitle = quizItem.querySelector('h4').textContent;
                    
                    if (confirm(`Are you sure you want to fix the options for "${quizTitle}"? This will ensure all questions have exactly 4 options.`)) {
                        fixQuizOptions(quizId, quizItem);
                    }
                });
            });
            
            function fixQuizOptions(quizId, quizItem) {
                fetch(`/fix-quiz-options/${quizId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Quiz options fixed successfully!', 'success');
                        // Reload the page to show updated quiz
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showNotification(data.error || 'Error fixing quiz options', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error fixing quiz options', 'error');
                });
            }
            
            // Delete quiz functionality
            const deleteButtons = document.querySelectorAll('.delete-quiz-btn');
            
            deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const quizId = this.getAttribute('data-quiz-id');
                    const quizItem = this.closest('.quiz-item');
                    const quizTitle = quizItem.querySelector('h4').textContent;
                    
                    if (confirm(`Are you sure you want to delete "${quizTitle}"? This action cannot be undone.`)) {
                        deleteQuiz(quizId, quizItem);
                    }
                });
            });
            
            function deleteQuiz(quizId, quizItem) {
                fetch(`/delete-quiz/${quizId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success message
                        showNotification('Quiz deleted successfully!', 'success');
                        
                        // Remove the quiz item from the DOM
                        quizItem.style.opacity = '0';
                        quizItem.style.transform = 'translateX(-100%)';
                        setTimeout(() => {
                            quizItem.remove();
                            
                            // Update the stats
                            updateStats();
                        }, 300);
                    } else {
                        showNotification(data.message || 'Error deleting quiz', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error deleting quiz', 'error');
                });
            }
            
            function showNotification(message, type) {
                // Create notification element
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.innerHTML = `
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                    <span>${message}</span>
                `;
                
                // Add to page
                document.body.appendChild(notification);
                
                // Show notification
                setTimeout(() => {
                    notification.classList.add('show');
                }, 100);
                
                // Remove notification after 3 seconds
                setTimeout(() => {
                    notification.classList.remove('show');
                    setTimeout(() => {
                        notification.remove();
                    }, 300);
                }, 3000);
            }
            
            function updateStats() {
                const quizItems = document.querySelectorAll('.quiz-item');
                const totalQuizzes = quizItems.length;
                const approvedQuizzes = Array.from(quizItems).filter(item => 
                    item.querySelector('.quiz-status').classList.contains('approved')
                ).length;
                const pendingQuizzes = totalQuizzes - approvedQuizzes;
                
                // Update stat numbers
                const statNumbers = document.querySelectorAll('.stat-number');
                if (statNumbers.length >= 3) {
                    statNumbers[0].textContent = totalQuizzes;
                    statNumbers[1].textContent = approvedQuizzes;
                    statNumbers[2].textContent = pendingQuizzes;
                }
            }
            
            // Copy organization code functionality
            function copyOrgCode() {
                const codeInput = document.getElementById('orgCode');
                const copyBtn = codeInput.nextElementSibling;
                
                // Select and copy the text
                codeInput.select();
                codeInput.setSelectionRange(0, 99999); // For mobile devices
                
                try {
                    document.execCommand('copy');
                    
                    // Visual feedback
                    const originalIcon = copyBtn.innerHTML;
                    copyBtn.innerHTML = '<i class="fas fa-check"></i>';
                    copyBtn.style.background = '#22c55e';
                    
                    // Show notification
                    showNotification('Organization code copied to clipboard!', 'success');
                    
                    // Reset button after 2 seconds
                    setTimeout(() => {
                        copyBtn.innerHTML = originalIcon;
                        copyBtn.style.background = '';
                    }, 2000);
                } catch (err) {
                    console.error('Failed to copy: ', err);
                    showNotification('Failed to copy code. Please copy manually.', 'error');
                }
            }
        });
    </script>
    
    <!-- Session timeout management -->
    <script src="/js/session-timeout.js"></script>
    <script>
        // Load recorrection requests when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadRecorrectionRequests(1);
        });

        // Current page tracking
        let currentPage = 1;
        let totalPages = 1;
        let totalRequests = 0;

        // Function to load recorrection requests
        async function loadRecorrectionRequests(page = 1, pageSize = 10) {
            try {
                // Show loading state
                const container = document.getElementById('recorrectionRequests');
                container.innerHTML = `
                    <div class="loading-state">
                        <i class="fas fa-spinner fa-spin"></i>
                        <p>Loading recorrection requests...</p>
                    </div>
                `;
                
                currentPage = page;
                const response = await fetch(`/api/recorrection-requests?page=${page}&limit=${pageSize}`);
                if (response.ok) {
                    const data = await response.json();
                    displayRecorrectionRequests(data.requests);
                    updatePagination(data.pagination);
                } else {
                    container.innerHTML = 
                        '<div class="error-state"><p>Error loading recorrection requests</p></div>';
                }
            } catch (error) {
                console.error('Error loading recorrection requests:', error);
                const container = document.getElementById('recorrectionRequests');
                container.innerHTML = 
                    '<div class="error-state"><p>Error loading recorrection requests</p></div>';
            }
        }

        // Function to change page
        function changePage(direction) {
            let newPage = currentPage;
            
            if (direction === 'next' && currentPage < totalPages) {
                newPage = currentPage + 1;
            } else if (direction === 'prev' && currentPage > 1) {
                newPage = currentPage - 1;
            }
            
            if (newPage !== currentPage) {
                const pageSize = document.getElementById('pageSize').value;
                loadRecorrectionRequests(newPage, pageSize);
            }
        }

        // Function to update pagination controls
        function updatePagination(pagination) {
            currentPage = pagination.currentPage;
            totalPages = pagination.totalPages;
            totalRequests = pagination.totalRequests;
            
            // Update pagination info
            const startItem = ((currentPage - 1) * pagination.limit) + 1;
            const endItem = Math.min(currentPage * pagination.limit, totalRequests);
            
            document.getElementById('paginationInfo').textContent = 
                `Showing ${startItem}-${endItem} of ${totalRequests} requests`;
            document.getElementById('currentPage').textContent = currentPage;
            document.getElementById('totalPages').textContent = totalPages;
            
            // Update button states
            document.getElementById('prevPageBtn').disabled = !pagination.hasPrevPage;
            document.getElementById('nextPageBtn').disabled = !pagination.hasNextPage;
            
            // Show pagination container if there are multiple pages
            const paginationContainer = document.getElementById('paginationContainer');
            if (totalPages > 1) {
                paginationContainer.style.display = 'block';
            } else {
                paginationContainer.style.display = 'none';
            }
        }

        // Function to display recorrection requests
        function displayRecorrectionRequests(requests) {
            const container = document.getElementById('recorrectionRequests');
            
            if (requests.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-check-circle"></i>
                        <p>No pending recorrection requests</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = requests.map(request => `
                <div class="recorrection-card">
                    <div class="recorrection-header">
                        <div class="student-info">
                            <h4>${request.studentName}</h4>
                            <p>${request.quizTitle}</p>
                        </div>
                        <span class="recorrection-status">Pending Recorrection</span>
                    </div>
                    
                    <div class="recorrection-details">
                        <div class="detail-row">
                            <span class="detail-label">Original Score:</span>
                            <span class="detail-value">${request.originalScore} / ${request.totalPoints}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Original Percentage:</span>
                            <span class="detail-value">${request.originalPercentage}%</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Requested On:</span>
                            <span class="detail-value">${new Date(request.recorrectionRequestedAt).toLocaleDateString()}</span>
                        </div>
                        ${request.recorrectionReason ? `
                            <div class="detail-row">
                                <span class="detail-label">Reason:</span>
                                <span class="detail-value">${request.recorrectionReason}</span>
                            </div>
                        ` : ''}
                    </div>
                    
                    <div class="recorrection-actions">
                        <button class="btn btn-sm btn-outline-primary" onclick="viewRecorrectionDetails('${request._id}')">
                            <i class="fas fa-eye"></i> View Details
                        </button>
                        <button class="btn btn-sm btn-success" onclick="processRecorrection('${request._id}')">
                            <i class="fas fa-check"></i> Process Recorrection
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Function to view recorrection details
        function viewRecorrectionDetails(resultId) {
            window.open(`/recorrection-details/${resultId}`, '_blank');
        }

        // Function to process recorrection
        function processRecorrection(resultId) {
            window.location.href = `/process-recorrection/${resultId}`;
        }

        // Function to change page size
        function changePageSize() {
            const pageSize = document.getElementById('pageSize').value;
            // Reset to first page when changing page size
            loadRecorrectionRequests(1, pageSize);
        }

        // Function to change quiz page size
        function changeQuizPageSize() {
            const pageSize = document.getElementById('quizPageSize').value;
            // Reset to first page when changing page size
            const currentUrl = new URL(window.location);
            currentUrl.searchParams.set('limit', pageSize);
            currentUrl.searchParams.set('page', '1');
            window.location.href = currentUrl.toString();
        }
    </script>
</body>
</html> 